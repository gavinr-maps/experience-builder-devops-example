"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_esm_Feat-92625a"],{84547:(e,t,i)=>{i.d(t,{default:()=>c});var s=i(18758),r=i(22067),a=i(74903),n=i(48892),o=i(48805);i(59920),i(82263),i(57628),i(36242),i(6640),i(33113),i(15144),i(75484),i(10368),i(4854),i(52328),i(4762),i(66609),i(93162),i(57463),i(69592),i(90951),i(84953),i(56616),i(19394),i(78445),i(51043),i(32612),i(47994),i(49044),i(31809),i(56824),i(61852),i(63390),i(21442),i(90955);const h=s.S.getLogger("esri.views.2d.layers.features.support.whereUtils"),l={getAttribute:(e,t)=>e.field(t)};async function d(e,t){const r=await Promise.resolve().then(i.bind(i,69592));try{const i=r.WhereClause.create(e,t);if(!i.isStandardized){const e=new s.s("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",i);h.error(e)}return e=>{const t=e.readArcadeFeature();return i.testFeature(t,l)}}catch(t){return h.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",e),e=>!0}}const _=s.S.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter");const c=class{constructor(e){this._geometryBounds=(0,r.i)(),this._idToVisibility=new Map,this._serviceInfo=e}get hash(){return this._hash}check(e){return this._applyFilter(e)}clear(){const e=this._resetAllHiddenIds();return this.update(),{show:e,hide:[]}}invalidate(){this._idToVisibility.forEach(((e,t)=>{this._idToVisibility.set(t,0)}))}setKnownIds(e){for(const t of e)this._idToVisibility.set(t,1)}setTrue(e){const t=[],i=[],s=new Set(e);return this._idToVisibility.forEach(((e,r)=>{const a=!!(1&this._idToVisibility.get(r)),n=s.has(r);!a&&n?t.push(r):a&&!n&&i.push(r),this._idToVisibility.set(r,n?3:0)})),{show:t,hide:i}}createQuery(){const{geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:r}=this;return a.R.fromJSON({geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:r})}async update(e,t){this._hash=JSON.stringify(e);const i=await(0,n.a)(e,null,t);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(e){if(!e||!e.where)return this._clause=null,void(this.where=null);this._clause=await d(e.where,this._serviceInfo.fieldsIndex),this.where=e.where}_setIdFilter(e){this._idsToShow=e&&e.objectIds&&new Set(e.objectIds),this._idsToHide=e&&e.hiddenIds&&new Set(e.hiddenIds),this.objectIds=e&&e.objectIds}async _setGeometryFilter(e){if(!e||!e.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const t=e.geometry,i=e.spatialRel||"esriSpatialRelIntersects",r=await(0,n.b)(i,t,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);(0,s.cA)(this._geometryBounds,t),this._spatialQueryOperator=r,this.geometry=t,this.spatialRel=i}_setTimeFilter(e){if(this.timeExtent=this._timeOperator=null,e&&e.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=e.timeExtent,this._timeOperator=(0,n.n)(this._serviceInfo.timeInfo,e.timeExtent,o.u);else{const t=new s.s("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",e.timeExtent);_.error(t)}}_applyFilter(e){return this._filterByGeometry(e)&&this._filterById(e)&&this._filterByTime(e)&&this._filterByExpression(e)}_filterByExpression(e){return!this.where||this._clause(e)}_filterById(e){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(e.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(e.getObjectId()))}_filterByGeometry(e){if(!this.geometry)return!0;const t=e.readHydratedGeometry();return!!t&&this._spatialQueryOperator(t)}_filterByTime(e){return!(0,s.H)(this._timeOperator)||this._timeOperator(e)}_resetAllHiddenIds(){const e=[];return this._idToVisibility.forEach(((t,i)=>{1&t||(this._idToVisibility.set(i,1),e.push(i))})),e}}}}]);