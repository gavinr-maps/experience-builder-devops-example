/*! For license information please see arcgis_analysis_node_modules_arcgis_app-components_dist_esm_item-8-db5f7f.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_item-8-db5f7f"],{49412:(e,r,n)=>{n.d(r,{a:()=>i,b:()=>a,i:()=>o});const t=["appExtensionError","forbiddenCredential","disabledSubscription","unauthorized","timeout","itemExists","exceedsFileSize","fileExists","emptyFile","unavailableGeocoder","dataNotAvailable","invalidShapefile","invalidFileGeodatabase","providePath","useSameFileName","invalidExtension","tokenRequired","invalidToken","invalid3DObjectFeatureClass","serviceNameInvalid","titleInvalid","titleRequired","titleInUseService","summaryInvalid","missingUserOrPortal","dataStoreTitleInvalid","serviceNameExists","folderNameExists","serviceNotExist","unsupportedWFSVersion","invalidWMTS","invalidSpatialRef","emptyFeatureLayer","invalidFeatureLayerUrl","invalidUrl","httpWarning","flowAborted","duplicateFieldNames","failToFetchText","mapServiceError","noTilingSchemeFound","noMatchSpatialRef","invalidDataStorePublishType","noRegisteredServersForDataStore","noContentInDataStore","failToPublishFromDataStore","failToListDataStoreContents","invalidUsernameOrPassword","invalidConnection","invalidCredentials","invalidBigQueryProjectId","invalidSnowflakeServer","invalidSnowflakeRole","invalidSnowflakeWarehouse","invalidSnowflakeSchema","invalidSnowflakeDatabase","invalidAWSBucket","invalidAzureContainer","invalidJSON","unknownAGSType","unhandledError","incompatibleGeometries","multiPatchRestriction","invalidUniqueIdentifier","cannotAddNullData","exceededMaxFieldLength","invalidFieldType"],a=e=>t.includes(null==e?void 0:e.code),i=e=>e&&e.hasOwnProperty("code")&&e.hasOwnProperty("message")&&e.hasOwnProperty("details")&&(!e.details||Array.isArray(e.details)),o=e=>{const r=e.toLocaleLowerCase();return r.includes("unexpected end of")||r.includes("did not match the expected pattern")}},49038:(e,r,n)=>{n.d(r,{a:()=>y,b:()=>f,c:()=>u,f:()=>d,g:()=>c});var t=n(46581),a=n(49412),i=n(2174),o=n(94788),s=n(66488),l=n(31141);const d=async(e,r)=>{const{owningSystemUrl:n}=await(0,t.f)((async()=>(0,s.g)(e)),"portalInfo",e.id);return(await Promise.all(r.map((async e=>{try{const{owningSystemUrl:r}=await(0,s.a)(e);return{owningSystemUrl:r,url:e}}catch(r){return console.error(r),{owningSystemUrl:null,url:e}}})))).filter((({owningSystemUrl:e})=>e===n)).map((({url:e})=>e))};async function c(e,r,n){const{relationshipType:a,direction:i}=n,s=`${(0,o.g)(r)}content/items/${e}/relatedItems`;return await(0,t.r)(s,{relationshipType:a,direction:i,includeRecycleBin:!0})}const u=async(e,r)=>{try{return{result:(await(0,t.r)(`${(0,o.g)(r)}/search`,{filter:`id:(${e.join(" OR ")})`,num:100})).results}}catch(e){return console.error(e),{error:{code:"unhandledError"}}}},y=async(e,r)=>{try{const n=[],a=[],i=[];await Promise.all(e.map((async e=>{const{result:o,error:d}=await(0,t.f)((()=>(async(e,r)=>{var n;try{return{result:await(0,l.r)(e,r,{addTokenManually:!1})}}catch(e){const r="token required";return(null===(n=null==e?void 0:e.message)||void 0===n?void 0:n.toLowerCase().includes(r))?{error:{code:"tokenRequired"}}:(console.error(e),{error:{code:"unhandledError"}})}})(e,r)),"itemMetadata",`${e}--no-token`);if("tokenRequired"!==(null==d?void 0:d.code))if(v(o))n.push(m(o,e));else try{const r=await(0,s.a)(e);i.push(Object.assign(Object.assign({},o),{owningSystemUrl:r.owningSystemUrl}))}catch(d){console.warn(d)}else a.push(e)})));const o=await d(r,a),c=(await Promise.all(o.map((async e=>({response:await(0,l.r)(e,r,{addTokenManually:!0}),owningSystemUrl:(await(0,s.a)(e)).owningSystemUrl,url:e}))))).reduce(((e,{response:r,url:t,owningSystemUrl:a})=>v(r)?(n.push(m(r,t)),e):[...e,Object.assign(Object.assign({},r),{owningSystemUrl:a})]),[]),u=await Promise.all([...i,...c].map((async({serviceItemId:e,owningSystemUrl:r})=>{if(!e)return null;const{result:n}=await w({itemId:e,owningSystemUrl:r});return{item:n,owningSystemUrl:r}}))),{result:p}=n.length<=0?{result:[]}:await y(n,r);return{result:[...u.filter((e=>!!e)),...p]}}catch(e){return console.error(e),{error:{code:"unhandledError"}}}},v=e=>!!(null==e?void 0:e.sources),m=(e,r)=>{var n;const t=null===(n=Object.values(e.sources)[0])||void 0===n?void 0:n.url;return t?t.includes("..")?(0,o.t)({url:r,path:t}):t:null},p=e=>`${e}/sharing/rest`,w=async({itemId:e,owningSystemUrl:r,requestOptions:n})=>{try{const a=(0,i.g)(e,p(r));return{result:await(0,t.r)(a,{},Object.assign(Object.assign({},n),{addTokenManually:!1}))}}catch(e){return console.error(e),(0,a.a)(e)&&e.message.toLocaleLowerCase().includes("invalid token")?{error:{code:"invalidToken"}}:{error:{code:"unhandledError"}}}},f=async({itemId:e,owningSystemUrl:r,requestOptions:n})=>{try{const a=`${(0,i.g)(e,p(r))}/data`;return{result:await(0,t.r)(a,{},Object.assign(Object.assign({},n),{addTokenManually:!1}))}}catch(e){return console.error(e),{error:{code:"unhandledError"}}}}},17300:(e,r,n)=>{n.d(r,{a:()=>s,b:()=>l,c:()=>u,d:()=>y,g:()=>d,i:()=>v});var t=n(31141),a=n(2174),i=n(94788),o=n(68616);const s=async(e,r)=>{try{return{result:await(0,t.r)(c(e,r),r)}}catch(e){return console.error(e),{error:{code:"unhandledError"}}}},l=(e,r)=>`${c(e,r)}/data`,d=async(e,r)=>(0,t.r)(l(e,r),r),c=(e,r)=>(0,a.g)(e,(0,i.g)(r)),u=async(e,r,n)=>{try{const a=c(e,r);return await(0,t.r)(a,r,n)}catch(e){console.warn(e)}},y=async(e,r)=>{try{const n=`${c(e,r)}/groups`;return{result:await(0,t.r)(n,r)}}catch(e){return console.error(e),{error:{code:"unhandledError"}}}},v=async(e,r)=>{let n=!1;return(0,o.i)(e.typeKeywords,e.type)&&(n=await m(e.url,r)),n},m=async(e,r,n=!1)=>{var a,o,s;if(e)try{const s=await(0,t.r)(`${null===(a=(0,i.p)(e))||void 0===a?void 0:a.baseServerUrl}/layers`,r,{addTokenManually:!n});return null===(o=null==s?void 0:s.layers)||void 0===o?void 0:o.reduce(((e,r)=>e||(null==r?void 0:r.capabilities.includes("Editing"))),!1)}catch(n){if(null===(s=null==n?void 0:n.message)||void 0===s?void 0:s.toLowerCase().includes("token required"))return m(e,r,!0)}return!1}},66488:(e,r,n)=>{n.d(r,{a:()=>y,b:()=>c,c:()=>s,d:()=>l,e:()=>v,f:()=>i,g:()=>u,h:()=>o,i:()=>m,q:()=>d});var t=n(46581),a=n(94788);function i(e){var r;return"ArcGISEnterpriseOnKubernetes"===(e.portalDeploymentType||(null===(r=e.sourceJSON)||void 0===r?void 0:r.portalDeploymentType))}function o(e){var r,n;return e.isPortal?"modern"===(null===(n=e.portalProperties)||void 0===n?void 0:n.homePage)||function(e){var r;return e.isPortal&&"modernOnly"===(null===(r=e.portalProperties)||void 0===r?void 0:r.homePage)}(e):"modern"===(null===(r=e.portalProperties)||void 0===r?void 0:r.homePage)||function(e){const r=new Date("June 30, 2020").getTime();return!e.isPortal&&e.created>=r}(e)}async function s(e){try{return{result:await(0,t.f)((()=>(0,t.r)(`${(0,a.g)(e)}portals/self/resources/home.page.json`)),"homePageConfig",e.id)}}catch(e){return{result:void 0}}}async function l(e){return(0,t.f)((()=>(0,t.r)(`${(0,a.g)(e)}portals/self/userDefaultSettings`)),"memberDefaults",e.id)}async function d(e={},r){return(0,t.r)(`${(0,a.g)(r)}/community/groups`,e)}const c=async(e,r)=>{var n;if(!e)return[];const i=`${(0,a.a)(null!==(n=r.restUrl)&&void 0!==n?n:r.portalUrl)}portals/self/servers`,o=await(0,t.f)((()=>(0,t.r)(i)),"selfServers",r.id);return null==o?void 0:o.servers},u=e=>y((0,a.c)(e)),y=e=>{var r;const n=`${(0,a.a)(null!==(r=(0,a.b)(e))&&void 0!==r?r:e)}info`;return(0,t.f)((()=>(0,t.r)(n,{},{addTokenManually:!1})),"portalInfo",n)};async function v(e,r){return!e.isPortal||await m(e,r)}async function m(e,r){if(!r||!e)return!1;if(!e.isPortal)return!0;const{result:n,error:a}=await(0,t.f)((()=>p(e,r)),"isPortalBackedBySDS",e.id);return!a&&n}const p=async(e,r)=>{if(e.isBackedBySDS)return{result:!0};if(!e.isPortal)return{result:!0};try{return{result:!!await w(r,e)}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)},result:!1}}},w=async(e,r)=>{var n;return(null!==(n=await c(e,r))&&void 0!==n?n:[]).filter((e=>e.isHosted))[0]}},31141:(e,r,n)=>{n.d(r,{r:()=>i});var t=n(46581),a=n(31670);const i=async(e,r,n={})=>{const{body:i,usePost:o,addTokenManually:s,api:l=(null===a.c||void 0===a.c?void 0:a.c.api),customToken:d}=n,c=new URLSearchParams;i&&Object.entries(i).forEach((([e,r])=>{void 0!==r&&c.append(e,r)}));const u=new URL(e);if(u.searchParams.append("f","json"),d)u.searchParams.append("token",d);else{const e=!1===s?null:await(0,t.g)(r,l);e&&u.searchParams.append("token",e)}const y=await fetch(u.toString(),{body:o?c:void 0,method:o?"POST":"GET"}),v=await y.json(),m=v.error;if(m)throw"string"==typeof m?new Error(m):m;return v}},68616:(e,r,n)=>{n.d(r,{i:()=>t});const t=(e,r)=>"Feature Service"===r&&e.includes("Hosted Service")}}]);