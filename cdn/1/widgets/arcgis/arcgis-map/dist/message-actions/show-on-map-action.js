System.register(["jimu-core","jimu-arcgis"],(function(e,t){var a={},o={};return{setters:[function(e){a.AbstractMessageAction=e.AbstractMessageAction,a.DataSourceManager=e.DataSourceManager,a.Immutable=e.Immutable,a.MessageCarryData=e.MessageCarryData,a.MessageType=e.MessageType,a.MutableStoreManager=e.MutableStoreManager,a.RecordSetChangeType=e.RecordSetChangeType,a.getAppStore=e.getAppStore},function(e){o.SHOW_ON_MAP_DATA_ID_PREFIX=e.SHOW_ON_MAP_DATA_ID_PREFIX,o.ShowOnMapDataType=e.ShowOnMapDataType}],execute:function(){e((()=>{"use strict";var e={26826:e=>{e.exports=o},48891:e=>{e.exports=a}},t={};function r(a){var o=t[a];if(void 0!==o)return o.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{default:()=>s});var e=r(48891),t=r(26826);function a(t,a){var r;const n=function(t,a){var r,n;const s=o(),i=null===(r=null==s?void 0:s.widgets)||void 0===r?void 0:r[t],u=null===(n=null==i?void 0:i.manifest)||void 0===n?void 0:n.publishMessages;let d=e.MessageCarryData.UseDataSource;return null==u||u.forEach((e=>{const t=e;(null==t?void 0:t.messageCarryData)&&(null==t?void 0:t.messageType)===a&&(d=null==t?void 0:t.messageCarryData)})),d}(t,a),s=o(),i=null===(r=null==s?void 0:s.widgets)||void 0===r?void 0:r[t],u=(null==i?void 0:i.useDataSources)||(0,e.Immutable)([]),d=function(t){var a;const o=null!==(a=null==t?void 0:t.map((e=>({dataSourceId:e,mainDataSourceId:e,rootDataSourceId:null}))))&&void 0!==a?a:[];return(0,e.Immutable)(o)}(null==i?void 0:i.outputDataSources)||(0,e.Immutable)([]),l=null==u?void 0:u.asMutable({deep:!0}).concat(null==d?void 0:d.asMutable({deep:!0}));switch(n){case e.MessageCarryData.OutputDataSource:return d;case e.MessageCarryData.UseDataSource:return u;case e.MessageCarryData.BothDataSource:return(0,e.Immutable)(l)}}function o(){var t,a,o;return window.jimuConfig.isBuilder?null===(a=null===(t=(0,e.getAppStore)().getState())||void 0===t?void 0:t.appStateInBuilder)||void 0===a?void 0:a.appConfig:null===(o=(0,e.getAppStore)().getState())||void 0===o?void 0:o.appConfig}class s extends e.AbstractMessageAction{filterMessageDescription(t){if(t.messageType===e.MessageType.DataRecordSetChange){const o=e.DataSourceManager.getInstance();return a(t.widgetId,t.messageType).some((e=>{var t;return!!(null===(t=o.getDataSource(e.dataSourceId).getDataSourceJson())||void 0===t?void 0:t.geometryType)}))}return!1}filterMessage(e){return!0}onRemoveListen(t,a){var o;const r=(null===(o=e.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===o?void 0:o.showOnMapDatas)||{},n={};Object.entries(r).forEach((e=>{var t;(null===(t=e[1])||void 0===t?void 0:t.messageWidgetId)!==a&&(n[e[0]]=e[1])})),e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"showOnMapDatas",n)}onExecute(a,o){var r;const n=this._getActiveViewId(this.widgetId,(0,e.getAppStore)().getState().jimuMapViewsInfo),s=this._getDefaultViewId(this.widgetId,(0,e.getAppStore)().getState().jimuMapViewsInfo),i=n||s;let u=(null===(r=e.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===r?void 0:r.showOnMapDatas)||{};const d=`${t.SHOW_ON_MAP_DATA_ID_PREFIX}messageAction_${this.widgetId}_${a.dataRecordSetId}_`,l=`${d}???`,g=n?`${d}${n}`:l;if(s&&s===n&&delete u[l],a.changeType===e.RecordSetChangeType.Create||a.changeType===e.RecordSetChangeType.Update)u[g]={mapWidgetId:this.widgetId,messageWidgetId:a.widgetId,jimuMapViewId:i,dataSet:a.dataRecordSet,type:t.ShowOnMapDataType.MessageAction,symbolOption:(null==o?void 0:o.isUseCustomSymbol)?o.symbolOption:!1===(null==o?void 0:o.isUseCustomSymbol)?null:void 0,title:g};else if(a.changeType===e.RecordSetChangeType.Remove){const e={};Object.entries(u).forEach((t=>{0!==t[0].indexOf(d)&&(e[t[0]]=t[1])})),u=e}return e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"showOnMapDatas",u),Promise.resolve(!0)}_getActiveViewId(e,t){return Object.keys(t||{}).find((a=>t[a].mapWidgetId===e&&t[a].isActive))}_getDefaultViewId(e,t){return Object.keys(t||{}).find((a=>t[a].mapWidgetId===e))}}})(),n})())}}}));