System.register(["jimu-core","jimu-arcgis"],(function(e,t){var a={},s={};return{setters:[function(e){a.AbstractMessageAction=e.AbstractMessageAction,a.AppMode=e.AppMode,a.DataSourceManager=e.DataSourceManager,a.DataSourcesChangeType=e.DataSourcesChangeType,a.Immutable=e.Immutable,a.MessageCarryData=e.MessageCarryData,a.MessageType=e.MessageType,a.MutableStoreManager=e.MutableStoreManager,a.RecordSetChangeType=e.RecordSetChangeType,a.getAppStore=e.getAppStore},function(e){s.loadArcGISJSAPIModules=e.loadArcGISJSAPIModules}],execute:function(){e((()=>{"use strict";var e={62686:e=>{e.exports=s},79244:e=>{e.exports=a}},t={};function o(a){var s=t[a];if(void 0!==s)return s.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,o),r.exports}o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{default:()=>g});var e=o(79244),t=o(62686);function a(e,t){let a=null;return e.clone?a=e.clone():(a=t.fromJSON(Object.assign({},e)),a.attributes=Object.assign({},e.attributes)),a}function s(t,a,s){if(t&&a){const o=(0,e.getAppStore)().getState().appConfig.messageConfigs;if(o){return n(t,a,o,s,["zoomToFeature"])}}return!1}function n(e,t,a,s,o){if(a){const r=Object.values(a);for(let a=0;a<r.length;a++){const n=r[a];if(n.widgetId===e&&n.messageType===s){const e=n.actions;for(let a=0;a<e.length;a++){const s=e[a];if(s.widgetId===t&&o.includes(s.actionName))return!0}}}}return!1}function i(t,a){var s,o;const r=c(),n=null===(s=null==r?void 0:r.widgets)||void 0===s?void 0:s[t],i=null===(o=null==n?void 0:n.manifest)||void 0===o?void 0:o.publishMessages;let u=e.MessageCarryData.UseDataSource;return null==i||i.forEach((e=>{const t=e;(null==t?void 0:t.messageCarryData)&&(null==t?void 0:t.messageType)===a&&(u=null==t?void 0:t.messageCarryData)})),u}function u(t,a){var s;const o=i(t,a),r=c(),n=null===(s=null==r?void 0:r.widgets)||void 0===s?void 0:s[t],u=(null==n?void 0:n.useDataSources)||(0,e.Immutable)([]),g=function(t){var a;const s=null!==(a=null==t?void 0:t.map((e=>({dataSourceId:e,mainDataSourceId:e,rootDataSourceId:null}))))&&void 0!==a?a:[];return(0,e.Immutable)(s)}(null==n?void 0:n.outputDataSources)||(0,e.Immutable)([]),d=null==u?void 0:u.asMutable({deep:!0}).concat(null==g?void 0:g.asMutable({deep:!0}));switch(o){case e.MessageCarryData.OutputDataSource:return g;case e.MessageCarryData.UseDataSource:return u;case e.MessageCarryData.BothDataSource:return(0,e.Immutable)(d)}}function c(){var t,a,s;return window.jimuConfig.isBuilder?null===(a=null===(t=(0,e.getAppStore)().getState())||void 0===t?void 0:t.appStateInBuilder)||void 0===a?void 0:a.appConfig:null===(s=(0,e.getAppStore)().getState())||void 0===s?void 0:s.appConfig}class g extends e.AbstractMessageAction{constructor(){super(...arguments),this.NoLockTriggerLayerWidgets=["Map"]}filterMessageDescription(t){const a=(0,e.getAppStore)().getState().appRuntimeInfo.appMode;if(t.messageType===e.MessageType.ExtentChange)return a!==e.AppMode.Express;if(t.messageType===e.MessageType.DataSourcesChange)return!0;if(t.messageType!==e.MessageType.DataRecordSetChange&&t.messageType!==e.MessageType.DataRecordsSelectionChange&&t.messageType!==e.MessageType.DataSourceFilterChange)return!1;{const a=e.DataSourceManager.getInstance();return u(t.widgetId,t.messageType).some((e=>{const t=a.getDataSource(e.dataSourceId);return!!t&&("WEB_MAP"===t.type||"WEB_SCENE"===t.type||!!t.getGeometryType())}))}}filterMessage(e){return!0}getSettingComponentUri(t,a){const s=(0,e.getAppStore)().getState().appRuntimeInfo.appMode;return t===e.MessageType.DataRecordsSelectionChange||t===e.MessageType.DataSourceFilterChange?s===e.AppMode.Express?null:"message-actions/pan-to-action-setting":null}onExecute(o,r){return(0,t.loadArcGISJSAPIModules)(["esri/Graphic"]).then((t=>{var n;let i=null;switch([i]=t,o.type){case e.MessageType.DataRecordSetChange:if(s(o.widgetId,this.widgetId,e.MessageType.DataRecordSetChange))break;const t=o;if(t.changeType===e.RecordSetChangeType.CreateUpdate){const s=[];t.dataRecordSets.forEach((e=>{if(e&&e.records)for(let t=0;t<e.records.length;t++){const o=e.records[t].feature;o&&s.push(a(o,i).geometry)}}));const o={type:"pan-to-geometries",geometries:s};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",o)}break;case e.MessageType.DataRecordsSelectionChange:if(s(o.widgetId,this.widgetId,e.MessageType.DataRecordsSelectionChange))break;const u=o.records,c=[];if(u){if(u[0]){const e=[],t=u[0].dataSource.getMainDataSource();if(t){e.push(t.id);const a=t.getAssociatedDataSource&&t.getAssociatedDataSource();a&&e.push(a.id)}if(!(null===(n=null==r?void 0:r.useDataSources)||void 0===n?void 0:n.some((t=>(null==t?void 0:t.mainDataSourceId)&&e.includes(null==t?void 0:t.mainDataSourceId)))))break}for(let e=0;e<u.length;e++){const t=u[e].feature;t&&c.push(a(t,i).geometry)}}if(c.length>0){const t={type:"pan-to-geometries",geometries:c};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",t)}break;case e.MessageType.ExtentChange:if(s(o.widgetId,this.widgetId,e.MessageType.ExtentChange))break;const g=o,d=g.getRelatedWidgetIds();if(d.includes(this.widgetId))break;const l={value:{type:"pan-to-extent",geometries:[g.extent],stationary:g.stationary,publishTime:g.publishTime,publishWidgetId:g.widgetId},relatedWidgets:d};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue",l);break;case e.MessageType.DataSourceFilterChange:if(s(o.widgetId,this.widgetId,e.MessageType.DataSourceFilterChange))break;const p=o,S=[];r.useDataSources&&r.useDataSources.forEach((e=>{const t=null==e?void 0:e.dataSourceId;t&&S.push(t)}));const y=(p.dataSourceIds||[]).filter((e=>S.includes(e)));if(0===y.length)break;const f={type:"pan-to-query-params",dataSourceIds:y,useDataSources:r.useDataSources||[]};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",f);break;case e.MessageType.DataSourcesChange:if(s(o.widgetId,this.widgetId,e.MessageType.DataSourcesChange))break;const M=o;if(M.changeType===e.DataSourcesChangeType.Create){const t=[];M.dataSources.forEach((e=>{t.push(e.id)}));const a={type:"pan-to-layers",dataSourceIds:t};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",a)}}return!0}))}}})(),r})())}}}));