System.register(["jimu-core","jimu-arcgis"],(function(t,e){var a={},i={};return{setters:[function(t){a.AbstractDataAction=t.AbstractDataAction,a.DataSourceStatus=t.DataSourceStatus,a.DataSourceTypes=t.DataSourceTypes,a.MutableStoreManager=t.MutableStoreManager,a.defaultMessages=t.defaultMessages,a.getAppStore=t.getAppStore,a.i18n=t.i18n,a.utils=t.utils},function(t){i.ADD_TO_MAP_DATA_ID_PREFIX=t.ADD_TO_MAP_DATA_ID_PREFIX,i.ActionType=t.ActionType,i.DataChangeStatus=t.DataChangeStatus,i.DataChangeType=t.DataChangeType,i.MapViewManager=t.MapViewManager,i.zoomToUtils=t.zoomToUtils}],execute:function(){t((()=>{"use strict";var t={26826:t=>{t.exports=i},48891:t=>{t.exports=a}},e={};function o(a){var i=e[a];if(void 0!==i)return i.exports;var n=e[a]={exports:{}};return t[a](n,n.exports,o),n.exports}o.d=(t,e)=>{for(var a in e)o.o(e,a)&&!o.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};return(()=>{o.r(n),o.d(n,{default:()=>i});var t=o(48891),e=o(26826),a=function(t,e,a,i){return new(a||(a=Promise))((function(o,n){function r(t){try{s(i.next(t))}catch(t){n(t)}}function u(t){try{s(i.throw(t))}catch(t){n(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof a?e:new a((function(t){t(e)}))).then(r,u)}s((i=i.apply(t,e||[])).next())}))};class i extends t.AbstractDataAction{constructor(){super(...arguments),this._viewManager=e.MapViewManager.getInstance()}isSupported(e){var i,o;return a(this,void 0,void 0,(function*(){const a=null==e?void 0:e.dataSource,n=this._getActiveViewId(this.widgetId,(0,t.getAppStore)().getState().jimuMapViewsInfo),r=this._viewManager.getJimuMapViewById(n);return!(!a||a.getStatus()===t.DataSourceStatus.NotReady)&&(a.type!==t.DataSourceTypes.SceneLayer&&a.type!==t.DataSourceTypes.SceneService||"2d"!==(null===(i=null==r?void 0:r.view)||void 0===i?void 0:i.type))&&(null==a?void 0:a.supportSpatialInfo)&&(null==a?void 0:a.supportSpatialInfo())&&!!(null==a?void 0:a.createJSAPILayerByDataSource)&&!a.isInAppConfig()&&0===(null===(o=e.records)||void 0===o?void 0:o.length)}))}onExecute(i,o){var n,r;return a(this,void 0,void 0,(function*(){const a=this._getActiveViewId(this.widgetId,(0,t.getAppStore)().getState().jimuMapViewsInfo),o=(null===(n=t.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===n?void 0:n.addToMapDatas)||{},u=t.i18n.getIntl(),s=i.name||"",d=u.formatMessage({id:"action_addedData",defaultMessage:t.defaultMessages.action_addedData},{label:s});o[`${e.ADD_TO_MAP_DATA_ID_PREFIX}dataAction_${t.utils.getUUID()}`]={mapWidgetId:this.widgetId,jimuMapViewId:a,dataSourceId:i.dataSource.id,type:e.ActionType.DataAction,dataChangeType:e.DataChangeType.Create,dataChangeStatus:e.DataChangeStatus.Pending,title:d},t.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"addToMapDatas",o);const c=this._viewManager.getJimuMapViewById(a);return c&&(null===(r=i.dataSource)||void 0===r||r.createJSAPILayerByDataSource().then((t=>{e.zoomToUtils.zoomTo(null==c?void 0:c.view,t,{padding:{left:50,right:50,top:50,bottom:50}})}))),yield Promise.resolve(!0)}))}_getActiveViewId(t,e){let a=Object.keys(e||{}).find((a=>e[a].mapWidgetId===t&&e[a].isActive));return a||(a=Object.keys(e||{}).find((a=>e[a].mapWidgetId===t))),a}}})(),n})())}}}));