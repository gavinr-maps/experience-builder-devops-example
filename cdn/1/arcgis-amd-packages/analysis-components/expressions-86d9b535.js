define(["exports","./index2-600fb1b2"],(function(e,t){"use strict";function n(e,t){if(!1===e)throw new Error(t)}let i=0;function s(){return i+=1,`${i}`}const a=86399e3;const r=Object.freeze({equal:(e,t)=>`${e} = ${t}`,not_equal:(e,t)=>`${e} <> ${t}`,is_in:(e,t)=>`${e} IN(${t.join(", ")})`,is_not_in:(e,t)=>`${e} NOT IN(${t.join(", ")})`,less:(e,t)=>`${e} < ${t}`,less_or_equal:(e,t)=>`${e} <= ${t}`,greater:(e,t)=>`${e} > ${t}`,greater_or_equal:(e,t)=>`${e} >= ${t}`,between:(e,t)=>`${e} BETWEEN ${t.join(" AND ")}`,not_between:(e,t)=>`${e} NOT BETWEEN ${t.join(" AND ")}`,contains:(e,t)=>`${e} LIKE '%${t.slice(1,-1)}%'`,not_contains:(e,t)=>`${e} NOT LIKE '%${t.slice(1,-1)}%'`,begins_with:(e,t)=>`${e} LIKE '${t.slice(1,-1)}%'`,not_begins_with:(e,t)=>`${e} NOT LIKE '${t.slice(1,-1)}%'`,ends_with:(e,t)=>`${e} LIKE '%${t.slice(1,-1)}'`,not_ends_with:(e,t)=>`${e} NOT LIKE '%${t.slice(1,-1)}'`,is_empty:(e,t)=>`${e} = ''`,is_not_empty:(e,t)=>`${e} <> ''`,is_blank:(e,t)=>`${e} IS Null`,is_not_blank:(e,t)=>`${e} IS NOT Null`,is_on:(e,t)=>`${e} BETWEEN ${t}`,is_not_on:(e,t)=>`${e} NOT BETWEEN ${t}`,is_before:(e,t)=>`${e} < ${t}`,is_after:(e,t)=>`${e} > ${t}`,is_true:(e,t)=>`${e} IS TRUE`,is_false:(e,t)=>`${e} IS FALSE`}),o={"<":"less","<=":"less_or_equal",">":"greater",">=":"greater_or_equal","=":"equal","<>":"not_equal",IN:"is_in","NOT IN":"is_not_in",BETWEEN:"between",NOTBETWEEN:"not_between"},l=["between","not_between","equal","not_equal","is_in","is_not_in","greater","greater_or_equal","less","less_or_equal","is_blank","is_not_blank"],u=["equal","not_equal","is_in","is_not_in","contains","not_contains","begins_with","not_begins_with","ends_with","not_ends_with","is_blank","is_not_blank","is_empty","is_not_empty"],c=["between","not_between","is_on","is_not_on","is_before","is_after","is_blank","is_not_blank"],p=["is_blank","is_not_blank"],d=["is_blank","is_not_blank","is_true","is_false"],h=["between","not_between"],g=["is_in","is_not_in"],_=["is_blank","is_not_blank","is_empty","is_not_empty","is_true","is_false"];function f(e){return h.includes(e)}function v(e){return g.includes(e)}function y(e){return _.includes(e)}function m(e,t){switch(t){case"integer":case"small-integer":case"big-integer":case"long":case"oid":return null==e?"0":("number"!=typeof e&&(e=parseInt(e)),"number"==typeof e&&isNaN(e)?"0":`${e}`);case"double":case"single":return null==e?"0.0":("number"!=typeof e&&(e=parseFloat(e)),"number"==typeof e&&isNaN(e)?"0.0":`${e}`);case"date":const n=e instanceof Date?e:void 0;return void 0!==n?`timestamp '${function(e){if(void 0===e)return"";const t=`${e.getUTCFullYear()}`;let n=`${e.getUTCMonth()+1}`;1===n.length&&(n=`0${n}`);let i=`${e.getUTCDate()}`;1===i.length&&(i=`0${i}`);let s=`${e.getUTCHours()}`;1===s.length&&(s=`0${s}`);let a=`${e.getUTCMinutes()}`;1===a.length&&(a=`0${a}`);let r=`${e.getUTCSeconds()}`;return 1===r.length&&(r=`0${r}`),`${t}-${n}-${i} ${s}:${a}:${r}`}(n)}'`:"''";case"string":return`'${null==e?"":e.replace(/'/g,"''")}'`;case"boolean":case"geometry":return"";default:throw new Error(`Unsupported data type: ${t}`)}}function b(e){switch(e.type){case"string":case"number":case"boolean":return e.value;case"null":return null;case"timestamp":return function(e){const t=new Date(e);return new Date(t.getTime()-6e4*t.getTimezoneOffset())}(e.value);case"function":case"binary-expression":case"column-reference":case"current-time":case"date":case"interval":case"interval-period":case"interval-qualifier":case"expression-list":case"case_expression":case"case-expression":case"timestamp":case"unary-expression":case"when-clause":throw new Error("Invalid expression: unsupported node value.")}}const $=["Meters","Kilometers","Feet","Yards","Miles"];function w(e){return null==e}function T(e){let t=!0;return(w(e)||""===e||"number"==typeof e&&isNaN(e))&&(t=!1),t}class I{constructor(e,t,n,i,a){this.field=e,this.dataType=t,this.value=n,this.operator=i,this.id=null!=a?a:s()}}class E extends I{constructor(){super(...arguments),this.type="value"}validate(){return y(this.operator)||T(this.value)}toSQL(){let e;if("date"===this.dataType)e=this.toSQLForDate(this.value,this.operator);else{const t=m(this.value,this.dataType);e=r[this.operator](this.field,t)}return e}toSQLForDate(e,t){switch(t){case"is_on":case"is_not_on":const n=void 0!==e?function(e){const t=function(e){return new Date(e.toDateString())}(e),n=function(e){return new Date(e.getTime()+a)}(e);return[t,n]}(e).map((e=>m(e,"date"))):["''","''"];return r[t](this.field,`${n[0]} AND ${n[1]}`);default:const i=m(e,"date");return r[t](this.field,i)}}}class N extends I{constructor(){super(...arguments),this.type="multi-value"}get validValues(){return this.value.filter(T)}validate(){return this.validValues.length>0}toSQL(){const e=this.validValues.map((e=>m(e,this.dataType)));return r[this.operator](this.field,e)}}class D extends I{constructor(){super(...arguments),this.type="range"}validate(){return T(this.value[0])&&T(this.value[1])}toSQL(){const e=m(this.value[0],this.dataType),t=m(this.value[1],this.dataType);return r[this.operator](this.field,[e,t])}}class x{constructor(e,t,n,i){this.layer=e,this.selectingLayer=t,this.spatialRelationship=n,this.spatialRelationshipParams=i}get isDistanceRelationship(){return"withinDistance"===this.spatialRelationship||"notWithinDistance"===this.spatialRelationship}validate(){var e;let t=void 0!==this.selectingLayer&&void 0!==this.spatialRelationship;if(this.isDistanceRelationship){const{distance:n,units:i}=null!==(e=this.spatialRelationshipParams)&&void 0!==e?e:{};t=t&&T(n)&&T(i)}return t}changeSelectingLayer(e){return new x(this.layer,e,this.spatialRelationship,this.spatialRelationshipParams)}static getValidLayersForRelationships(e,t,n){const i=new Map;return n.forEach((n=>{let s=this.filterLayersBasedOnGeometryType(e,t,n);s=this.getValidSelectingLayers(e,null!=s?s:[]),i.set(n,s)})),i}static filterLayersBasedOnGeometryType(e,t,n){var i,s,a,r;const o=new Map;t.forEach((e=>{o.has(e.geometryType)?o.get(e.geometryType).push(e):o.set(e.geometryType,[e])}));const l=e.geometryType,u=null!==(i=o.get("polygon"))&&void 0!==i?i:[],c=null!==(s=o.get("polyline"))&&void 0!==s?s:[],p=null!==(a=o.get("point"))&&void 0!==a?a:[],d=null!==(r=o.get("multipoint"))&&void 0!==r?r:[];let h=[];return h="contains"===n||"notContains"===n?"polygon"===l?[...p,...c,...u,...d]:"polyline"===l?[...p,...c,...d]:"point"===l||"multipoint"===l?[...p,...d]:[]:"within"===n||"notWithin"===n?"point"===l||"multipoint"===l?[...p,...c,...u,...d]:"polyline"===l?[...u,...c]:"polygon"===l?u:[]:t,h}static getValidSelectingLayers(e,t){return t.filter((t=>e.id!==t.id))}changeSpatialRelationship(e){var t,n,i;const s=new x(this.layer,this.selectingLayer,e);return s.isDistanceRelationship&&(s.spatialRelationshipParams={distance:null===(t=this.spatialRelationshipParams)||void 0===t?void 0:t.distance,units:null!==(i=null===(n=this.spatialRelationshipParams)||void 0===n?void 0:n.units)&&void 0!==i?i:$[0]}),s}changeSpatialRelationshipDistance(e){const t=Object.assign(Object.assign({},this.spatialRelationshipParams),{distance:e});return new x(this.layer,this.selectingLayer,this.spatialRelationship,t)}changeSpatialRelationshipUnit(e){const t=Object.assign(Object.assign({},this.spatialRelationshipParams),{units:e});return new x(this.layer,this.selectingLayer,this.spatialRelationship,t)}}function L(e,t,n){var i,s,a;const r=null!==(i=null==t?void 0:t.allowGeometryFields)&&void 0!==i&&i,o=[null===(s=null==n?void 0:n.geometryFieldsInfo)||void 0===s?void 0:s.shapeAreaField,null===(a=null==n?void 0:n.geometryFieldsInfo)||void 0===a?void 0:a.shapeLengthField].includes(e.name)&&!1===r;if(!0===(null==t?void 0:t.hideObjectIdField)&&e.name===(null==n?void 0:n.objectIdField)||!0===o)return!1;switch(e.type){case"string":case"small-integer":case"integer":case"single":case"double":case"long":case"date":case"geometry":case"oid":return!0;case"big-integer":return!0===(null==t?void 0:t.allowBigIntType);default:return!1}}function O(e,t){var n;let i;return w(e.description)||(e.description===(null==t?void 0:t.booleanFieldDescription)?i="boolean":!0===(null===(n=null==t?void 0:t.geometryFieldDescriptions)||void 0===n?void 0:n.includes(e.description))&&(i="geometry")),i}function S(e){let t="value";return f(e)?t="range":v(e)&&(t="multi-value"),t}class R{constructor(e){this.expression=e}changeOperator(e){const{field:t,dataType:n,id:i}=this.expression,s=R.create({field:t,dataType:n,operator:e,id:i});return S(e)===this.expression.type&&(s.value=this.expression.value),s}changeField(e,t){var n;if(!L(e,t))throw new Error(`Unsupported field type '${e.type}' for '${e.name}'`);const i=null!==(n=O(e,t))&&void 0!==n?n:e.type;return R.create({field:e.name,dataType:i,id:this.expression.id})}static create({field:e,dataType:t,operator:n,id:i}){let s,a,r;switch(t){case"string":s="equal",a=u;break;case"small-integer":case"integer":case"big-integer":case"single":case"double":case"long":case"oid":s="equal",a=l;break;case"date":s="is_on",a=c;break;case"geometry":s="is_blank",a=p;break;case"boolean":s="is_true",a=d;break;default:throw new Error(`Data type not supported: ${t}`)}if(void 0!==n&&!a.includes(n))throw new Error(`Invalid operator '${n}' for type '${e}'`);const o=null!=n?n:s;switch(S(o)){case"value":r=new E(e,t,void 0,o,i);break;case"multi-value":r=new N(e,t,[],o,i);break;case"range":r=new D(e,t,[void 0,void 0],o,i)}return r}static createDefaultForLayer(e,t){var n;const i=e.fields.filter((n=>L(n,t,e)));if(!(i.length<1)){const e=i[0],s=null!==(n=O(e,t))&&void 0!==n?n:e.type;return R.create({field:e.name,dataType:s})}}}R.fromSQL=async(e,n,i)=>{const s=await t.parseWhereClause(e,n);return R.fromSQLNode(s.parseTree,n,i)},R.fromSQLNode=(e,t,i)=>{var s;let r,l;n("binary-expression"===e.type,"Invalid expression: not a condition."),"column-reference"===e.left.type?(r=e.left,l=e.right):(r=e.right,l=e.left),n("column-reference"===r.type,"Invalid expression: missing column reference.");const u=t.get(r.column);let c;n(L(u,i),"Invalid expression: unsupported field.");const p=o[e.operator];if(f(p)){n("expression-list"===l.type,"Invalid expression: invalid value type.");const e=l.value,t=b(e[0]),i=b(e[1]);if(c=new D(u.name,u.type,[t,i],p),t instanceof Date&&i instanceof Date&&function(e){const t=e[0],n=(i=e[1],new Date(i.getTime()-a));var i;return Math.abs(n.getTime()-t.getTime())<1e3}([t,i])){const e="between"===c.operator?"is_on":"is_not_on";c=new E(u.name,"date",t,e)}}else if(v(p)){n("expression-list"===l.type,"Invalid expression: invalid value type.");const e=l.value.map(b);c=new N(u.name,u.type,e,p)}else{const[t,a]=function(e,t){const i=b(t);switch(e){case"IS":if(null===i)return["is_blank",void 0];if("boolean"==typeof i)return[!0===i?"is_true":"is_false",void 0];throw new Error("Invalid expression: unsupported value for `IS` operator.");case"ISNOT":if(null===i)return["is_not_blank",void 0];throw new Error("Invalid expression: unsupported value for `ISNOT` operator.");case"=":return""===i?["is_empty",""]:["equal",i];case"<>":return""===i?["is_not_empty",""]:["not_equal",i];case"<":return i instanceof Date?["is_before",i]:["less",i];case">":return i instanceof Date?["is_after",i]:["greater",i];case"LIKE":return n("string"==typeof i,"Invalid expression: unsupported value for `LIKE` operator."),i.startsWith("%")&&i.endsWith("%")?["contains",i.substring(1,i.length-1)]:i.endsWith("%")?["begins_with",i.substring(0,i.length-1)]:i.startsWith("%")?["ends_with",i.substring(1)]:["equal",i];case"NOT LIKE":return n("string"==typeof i,"Invalid expression: unsupported value for `NOT LIKE` operator."),i.startsWith("%")&&i.endsWith("%")?["not_contains",i.slice(1,i.length-1)]:i.endsWith("%")?["not_begins_with",i.slice(0,i.length-1)]:i.startsWith("%")?["not_ends_with",i.slice(1)]:["not_equal",i];default:const t=o[e];return n(void 0!==t,"Invalid expression: unsupported operator."),[t,i]}}(e.operator,l),r=null!==(s=O(u,i))&&void 0!==s?s:u.type;c=new E(u.name,r,a,t)}return c},e.BooleanOperators=d,e.DateOperators=c,e.ExpressionController=R,e.ExpressionGroupOperator={And:"and",Or:"or",Default:""},e.GeometryOperators=p,e.NumericOperators=l,e.SpatialExpression=x,e.SpatialRelationshipUnits=$,e.SpatialRelationships={Intersects:"intersects",NotIntersects:"notIntersects",WithinDistance:"withinDistance",NotWithinDistance:"notWithinDistance",Contains:"contains",NotContains:"notContains",Within:"within",NotWithin:"notWithin",Nearest:"nearest"},e.StringOperators=u,e.assert=n,e.getIncrementalId=s,e.isFloatFieldType=function(e){return"single"===e||"double"===e},e.isIntFieldType=function(e){return"small-integer"===e||"integer"===e||"big-integer"===e||"long"===e||"oid"===e},e.isNoValueOperator=y,e.isRangeOperator=f,e.isSupportedField=L}));