// WARNING:
// This file is generated by a grunt build task.
// Do not modify it by hand.

/**
 * Messages from `geoenrichment/t9n/ReportPlayer/ReportPlayer_en.json`.
 */
export default interface ReportPlayerMessages {
  ReportPlayer: {
    previousPage: string;
    nextPage: string;
    preparedByEsri: string;
    cantPlayReportError: string;
    createImageCommandLabel: string;
    printCommandLabel: string;
    createPDFCommandLabel: string;
    createHTMLCommandLabel: string;
    createDynamicHTMLCommandLabel: string;
    createExcelCommandLabel: string;
    textPrompt: string;
    missingVariable: string;
    unsupportedContent: string;
    scriptNameDefault: string;
    addIcon: string;
    infographicEmpty: string;
    imageLoadError: string;
    thisArea: string;
    unavailableDataShort: string;
    locatorLayerLegendTitle: string;
    locatorsExcelFileName: string;
    geography: string;
    ring: string;
    sourcePattern: string;
    mapLoadError: string;
    mapLimitErrorSingle: string;
    mapLimitErrorMulti: string;
    mapLockTooltip: string;
  };
  Grid: {
    variable: string;
    variableIsBasedOnExpression: string;
    sortTable: string;
    columnN: string;
    rowN: string;
    noTableData: string;
  };
  GridCell: {
    dragToChangeHeight: string;
    dragToChangeWidth: string;
    elementSizeFormat: string;
    columnWidth: string;
    rowHeight: string;
    editText: string;
  };
  PlayerToolbar: {
    printInfographic: string;
    exportInfographic: string;
    close: string;
    fullscreen: string;
    fitPage: string;
    fitPageWidth: string;
    fitPageHeight: string;
    pageIndex: string;
    compareAreasSideBySide: string;
    compareAreasSideBySideTooltipOn: string;
    compareAreasSideBySideTooltipOff: string;
    allAreas: string;
    addMoreAreas: string;
    removeAreaFromInfographic: string;
    removeAreasFromInfographic: string;
    customZoom: string;
    comparisonSettings: string;
    showBackgroundImage: string;
    splitPanels: string;
    splitPanelsTooltip: string;
    spaceFactor: string;
    zoomPanels: string;
    zoomPanelsTooltip: string;
    reset: string;
  };
  Sections: {
    pageHeader: string;
    pageFooter: string;
    reportFooter: string;
    details: string;
    group: string;
    detailsHeader: string;
    locatorTable: string;
    locatorHeaderTable: string;
    locatorFooterTable: string;
    summarizeTable: string;
    mapLoadError: string;
    pageBreak: string;
  };
  ChartContainer: {
    comparisonLabelDots: string;
    comparisonLabelBars: string;
    selectOrAddGeographyToCompare: string;
    compareWith: string;
    chartLoadError: string;
    gaugeOthers: string;
    waffleOthers: string;
    thisArea: string;
    unavailableDataShort: string;
    addToChart: string;
    alreadyAdded: string;
    removeFromChart: string;
    oneMile: string;
    threeMiles: string;
    fiveMiles: string;
    noChartData: string;
    total: string;
    average: string;
  };
  Infographics: {
    noInfographicsToShow: string;
    dynamicInfographicError: string;
    printInfographic: string;
    exportInfographic: string;
    noInfographicData: string;
    drillForMoreData: string;
  };
  LocatorTableInfographic: {
    noLocatorData: string;
    noLocatorDataOutOfRange: string;
    locatorExportTitle: string;
    oneClosestLocations: string;
    numClosestLocations: string;
    summaryInTable: string;
    andOneMore: string;
    andNOthers: string;
    count: string;
  };
  ComparisonTableInfographic: {
    noComparisonData: string;
    showInSeparateColumn: string;
    showInSeparateRow: string;
    removeColumn: string;
    removeRow: string;
    alreadyAdded: string;
  };
  AreaDetailsInfographic: {
    noDetails: string;
    attributes: string;
    notes: string;
    noteSample: string;
  };
  IntFactsInfographic: {
    descPatternLess: string;
    descPatternMore: string;
    comparingWith: string;
    comparingWithIn: string;
    comparingWithInMulti: string;
    showOutliers: string;
    hideOutliers: string;
    histogram: {
      minValue: string;
      maxValue: string;
      thisAreaValue: string;
      medianValue: string;
      q1Value: string;
      q3Value: string;
      percentile: string;
      tooltip: {
        range_single: string;
        range_multi: string;
        thisArea: string;
        percentileLower: string;
        percentileUpper: string;
      };
    };
    advanced: {
      title: string;
      score: string;
      score_tooltip: string;
      min: string;
      max: string;
      avg: string;
      stdDev: string;
      iqr: string;
      percentile: string;
      learnMore: string;
    };
    noFacts: string;
    noFacts_tooltip: string;
    noFactsBelow: string;
    noFactsAbove: string;
  };
  FieldInfoRenderer: {
    comparisonInfoUnavailable: string;
  };
  FieldInfoLabels: {
    chartPointValue: string;
    chartPointName: string;
    chartSeriesName: string;
    chartAreaName: string;
    geographyName: string;
  };
  UIScripts: {
    percentDiff_alias: string;
    percentDiff_definition: string;
    absDiff_alias: string;
    absDiff_definition: string;
    lowerHigher_alias: string;
    lowerHigher_definition: string;
    comparisonValue_definition: string;
  };
  ConditionalLegend: {
    conditionalLegend_title: string;
    conditionalLegend_operator_equals: string;
    conditionalLegend_operator_less: string;
    conditionalLegend_operator_lessOrEquals: string;
    conditionalLegend_operator_greater: string;
    conditionalLegend_operator_greaterOrEquals: string;
    conditionalLegend_preview: string;
    conditionalLegend_interval: string;
    conditionalLegend_default: string;
    aboveAverage: string;
    belowAverage: string;
    topN: string;
    topAt0: string;
    topAt1: string;
    topAt2: string;
    topAtN: string;
    bottomN: string;
    bottomAt0: string;
    bottomAt1: string;
    bottomAt2: string;
    bottomAtN: string;
    indexDescOrder_interval: string;
  };
  ChartTooltip: {
    pieChartTooltip_label: string;
    gaugeChartTooltip_label: string;
    waffleChartTooltip_label: string;
    weight: string;
    minValue: string;
    maxValue: string;
    avgValue: string;
    weightInSeries: string;
    minValueInSeries: string;
    maxValueInSeries: string;
    avgValueInSeries: string;
    weightInStack: string;
    weightInAreas: string;
    minValueInAreas: string;
    maxValueInAreas: string;
    avgValueInAreas: string;
    thisAreaSeries: string;
    unavailableData: string;
    noTooltipAvailable: string;
    addDataDrilling: string;
    drillForMoreData: string;
    drillForMoreDataEdit: string;
  };
  MinMaxLegend: {
    largestGroup: string;
    smallestGroup: string;
  };
  OneVar: {
    lessThan: string;
    moreThan: string;
    same: string;
  };
  SectionDynamicSettingsBuilder: {
    refineYourResults: string;
    resetFilters: string;
    byKeywords: string;
    keywordsPlaceholder: string;
    showLegend: string;
    exportToExcel: string;
    exportInfographicPanel: string;
    variablesInColumns: string;
    refineYourAreas: string;
    refineGeographies: string;
    refineVariablesInChart: string;
    sliderShowsValuesAcrossVariablesInChart: string;
    refineVariablesInTable: string;
    enterAttributeNameOrNoteText: string;
    on: string;
    groupTableBy: string;
    none: string;
    showSummaryFor: string;
    orSelectMethod: string;
    selectRange: string;
    selectColumn: string;
    selectMethod: string;
    topN: string;
    bottomN: string;
    aboveAverage: string;
    belowAverage: string;
    ChartSettings: {
      noSorting: string;
      sortAscending: string;
      sortDescending: string;
      viewTable: string;
      viewChart: string;
      calcTotalsAndAverage: string;
      showTotalsBelow: string;
      showAvgBelow: string;
      showTotalsAfter: string;
      showAvgAfter: string;
    };
    TableSettings: {
      viewAs: string;
      seriesInRows: string;
      seriesInColumns: string;
      table: string;
      chartType_Column: string;
      chartType_Bar: string;
      chartType_Pie: string;
      chartType_Donut: string;
      chartType_Gauge: string;
      chartType_Waffle: string;
      chartType_Ring: string;
      chartType_Line: string;
      chartType_VerticalLine: string;
      maxNVariables: string;
      maxNLocations: string;
      row: string;
      column: string;
      showAll: string;
    };
  };
  DummyGE: {
    sampleData: string;
  };
  AreasInfoTemplateBuilder: {
    notes: string;
    attributes: string;
    unavailableData: string;
  };
  units: {
    shortNames: {
      px: string;
      in: string;
      pt: string;
      mm: string;
      cm: string;
    };
    longNames: {
      px: string;
      pt: string;
      mm: string;
      cm: string;
      in: string;
    };
    longNamesWithUnits: {
      px: string;
      pt: string;
      mm: string;
      cm: string;
      in: string;
    };
  };
  ReportContainerStackAll: {
    infographicEmpty: string;
    benchmark: string;
    removeBenchmark: string;
    makeBenchmark: string;
    removeArea: string;
  };
  PaperSize: {
    a3: string;
    a4: string;
    a5: string;
    b4: string;
    b5: string;
    c4: string;
    c5: string;
    letter: string;
    legal: string;
    tabloid: string;
    ledger: string;
    custom: string;
  };
  ExportDialog: {
    dialogTitlePrint: string;
    dialogTitleExport: string;
    createPDFLabel: string;
    createHTMLLabel: string;
    createDynamicHTMLLabel: string;
    createImageLabel: string;
    createExcelLabel: string;
    printLabel: string;
    cancel: string;
    exportAs: string;
    headerAndFooter: string;
    headerLabel: string;
    title: string;
    subtitle: string;
    titlePlaceholder: string;
    subtitlePlaceholder: string;
    footerLabel: string;
    dataSourceLabel: string;
    pageSize: string;
    landscape: string;
    portrait: string;
    customWithDimensions: string;
    enableDataDrilling: string;
    enableDataDrillingTooltip: string;
    exportMapsAsImages: string;
    exportMapsAsImagesTooltip: string;
    splitPages: string;
    exportExcelMaps: string;
    includeExcelDataDrilling: string;
    DynamicFeatureServiceOptions: {
      enableQuery: string;
      enableQuery_tooltip: string;
      toCorrectlyMatchDesc: string;
      specifySource: string;
      loadFields: string;
      originalFeatureField: string;
      attributesSourceField: string;
      addLayer: string;
      sourceLayerN: string;
      layerUrlExample: string;
      fieldsLoaded: string;
      selectFieldToQueryBy: string;
      selectFieldToQueryByTooltip: string;
      chooseFromAllFields: string;
      selectFromSameFields: string;
      cannotLoadFields: string;
    };
  };
  ExportCommands: {
    latitude: string;
    longitude: string;
    pageNofM: string;
    legend: string;
    errorTitle: string;
    printError: string;
    exportInfographicError: string;
    createPDFError: string;
    createHTMLError: string;
    createExcelError: string;
    createImageError: string;
    createPlayerError: string;
    exportMapError: string;
    warningTitle: string;
    exportMapLimitWarning: string;
    exportedMapUnavailableLimit: string;
    PanelInfoCollector: {
      chartTitle: string;
      infographicTitle: string;
      tableTitle: string;
      infographicTitle_agePyramid: string;
      infographicTitle_tapestry: string;
      infographicTitle_prizm5: string;
      infographicTitle_siteDetails: string;
      comparisonAreaTitle: string;
      freeVariables: string;
    };
    PanelInfosToColumnsConverter: {
      tableHeader_name: string;
      tableHeader_value: string;
      tableHeader_thisArea: string;
    };
  };
  UrlToItemUtil: {
    featureLayer: string;
    featureServicePattern: string;
    mapServicePattern: string;
    imageServicePattern: string;
    vectorTileServicePattern: string;
    wmsServicePattern: string;
    wmtsServicePattern: string;
    wfsServicePattern: string;
    kmlPattern: string;
    csvPattern: string;
  };
  Variables: {
    sourcePattern: string;
    vintagePattern: string;
    distance: string;
    direction: string;
  };
}
