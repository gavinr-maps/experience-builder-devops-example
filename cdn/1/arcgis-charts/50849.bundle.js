"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[50849],{50849:(e,t,r)=>{r.r(t),r.d(t,{default:()=>X});var o=r(36663),i=(r(91957),r(80085)),l=(r(4905),r(6865)),n=r(70375),a=r(67134),s=r(15842),y=r(86745),p=r(96863),u=r(81977),d=(r(7283),r(34248)),c=r(40266),m=r(39835),f=r(92376),b=r(24568),h=r(29927),g=r(35925),S=r(12926),C=(r(7753),r(39994),r(4637)),O=r(38481),_=r(27668),w=r(95874),v=r(94449),N=r(74710);let L=class extends((0,_.h)((0,w.M)(O.Z))){constructor(e){super(e),this.elevationInfo=null,this.graphics=new v.J,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};(0,o._)([(0,u.Cb)({type:N.Z})],L.prototype,"elevationInfo",void 0),(0,o._)([(0,u.Cb)((0,C.z)(v.J,"graphics"))],L.prototype,"graphics",void 0),(0,o._)([(0,u.Cb)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,o._)([(0,u.Cb)()],L.prototype,"screenSizePerspectiveEnabled",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],L.prototype,"type",void 0),(0,o._)([(0,u.Cb)({constructOnly:!0})],L.prototype,"internal",void 0),L=(0,o._)([(0,c.j)("esri.layers.GraphicsLayer")],L);const J=L;var x=r(93711),M=r(43330),T=r(18241),I=r(12512),j=r(43411),Z=r(15498),E=r(1759),R=r(27624),D=r(14685),P=r(91772);function G(e){return"markup"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!F(e)))}function F({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return H.find((t=>r===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type))}function B(){return new P.Z({xmin:-180,ymin:-90,xmax:180,ymax:90})}const k=new I.Z({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),z=new I.Z({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let A=class extends J{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?null==t?(0,f.projectOrLoad)(B(),e).geometry:(0,b.HH)(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=(0,b.cS)();return this.graphics.forEach((r=>{const o=null!=r.geometry?(0,f.projectOrLoad)(r.geometry,e).geometry:null;null!=o&&(0,b.jn)(t,"point"===o.type?o:o.extent,t)})),(0,b.fS)(t,b.Gv)?null:t}get sublayers(){return this.graphics}};(0,o._)([(0,u.Cb)({readOnly:!0})],A.prototype,"fullExtent",null),(0,o._)([(0,u.Cb)({readOnly:!0})],A.prototype,"fullBounds",null),(0,o._)([(0,u.Cb)({readOnly:!0})],A.prototype,"sublayers",null),(0,o._)([(0,u.Cb)()],A.prototype,"layer",void 0),(0,o._)([(0,u.Cb)()],A.prototype,"layerId",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],A.prototype,"visibilityMode",void 0),A=(0,o._)([(0,c.j)("esri.layers.MapNotesLayer.MapNotesSublayer")],A);const H=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new j.Z).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new Z.Z).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new E.Z).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new E.Z).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new R.Z).toJSON()}];let W=class extends((0,_.h)((0,w.M)((0,M.q)((0,T.I)((0,s.R)(O.Z)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=D.Z.WGS84,this.sublayers=new l.Z(H.map((e=>new A({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!G(t)&&"portal-item"!==r?.origin}}}readFeatureCollections(e,t,r){if(!G(t))return null;const o=t.layers.map((e=>{const t=new S.default;return t.read(e,r),t}));return new l.Z({items:o})}readLegacyfeatureCollectionJSON(e,t){return G(t)?(0,a.d9)(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=(0,b.cS)();return null!=this.sublayers?this.sublayers.forEach((({fullBounds:e})=>null!=e?(0,b.jn)(t,e,t):t),t):this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))&&this.featureCollectionJSON.layers.forEach((r=>{const o=(0,f.projectOrLoad)(r.layerDefinition.extent,e).geometry;null!=o&&(0,b.jn)(t,o,t)})),(0,b.fS)(t,b.Gv)?(0,f.projectOrLoad)(B(),e).geometry:(0,b.HH)(t,e)}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?D.Z.fromJSON(t.layers[0].layerDefinition.spatialReference):D.Z.WGS84}readSublayers(e,t,r){if(G(t))return null;const o=[];let n=t.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const e of t.layers){const{layerDefinition:t,featureSet:r}=e,l=t.id??n++,a=F(e);if(null!=a){const e=new A({id:a.id,title:t.name,layerId:l,layer:this,graphics:r.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:o})=>i.Z.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:o})))});o.push(e)}}return new l.Z(o)}writeSublayers(e,t,r,o){const{minScale:i,maxScale:l}=this;if(null==e)return;const a=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(a&&o?.messages?.push(new n.Z("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const s=[];let p=this.spatialReference.toJSON();e:for(const t of e)for(const e of t.graphics)if(null!=e.geometry){p=e.geometry.spatialReference.toJSON();break e}for(const t of H){const r=e.find((e=>t.id===e.id));this._writeMapNoteSublayer(s,r,t,i,l,p,o)}(0,y.RB)("featureCollection.layers",s,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=(0,a.d9)(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(null==this.sublayers)return;let e=null;const t=[];for(const r of this.sublayers)for(const o of r.graphics)if(null!=o.geometry){const r=o.geometry;e?(0,g.fS)(r.spatialReference,e)||((0,f.canProjectWithoutEngine)(r.spatialReference,e)||(0,f.isLoaded)()||await(0,f.load)(),o.geometry=(0,f.project)(r,e)):e=r.spatialReference,t.push(o)}const r=await(0,h.aX)(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return null==this.sublayers?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,o,i,l,n){const s=[];if(null!=t){for(const e of t.graphics)this._writeMapNote(s,e,r.geometryType,n);this._normalizeObjectIds(s,k),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:(0,a.d9)(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:i,objectIdField:"OBJECTID",fields:[k.toJSON(),z.toJSON()],spatialReference:l},featureSet:{features:s,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if(null==t)return;const{geometry:i,symbol:l,popupTemplate:n}=t;if(null==i)return;if(i.type!==r)return void o?.messages?.push(new p.Z("map-notes-layer:invalid-geometry-type",`Geometry "${i.type}" cannot be saved in "${r}" layer`,{graphic:t}));if(null==l)return void o?.messages?.push(new p.Z("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const a={attributes:{...t.attributes},geometry:i.toJSON(),symbol:l.toJSON()};null!=n&&(a.popupInfo=n.toJSON()),e.push(a)}_normalizeObjectIds(e,t){const r=t.name;let o=(0,x.S)(r,e)+1;const i=new Set;for(const t of e){t.attributes||(t.attributes={});const{attributes:e}=t;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"capabilities",void 0),(0,o._)([(0,d.r)(["portal-item","web-map"],"capabilities",["layers"])],W.prototype,"readCapabilities",null),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"featureCollections",void 0),(0,o._)([(0,d.r)(["web-map","portal-item"],"featureCollections",["layers"])],W.prototype,"readFeatureCollections",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],W.prototype,"featureCollectionJSON",void 0),(0,o._)([(0,d.r)(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],W.prototype,"readLegacyfeatureCollectionJSON",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],W.prototype,"featureCollectionType",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"fullExtent",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],W.prototype,"legendEnabled",void 0),(0,o._)([(0,u.Cb)({type:["show","hide","hide-children"]})],W.prototype,"listMode",void 0),(0,o._)([(0,u.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],W.prototype,"minScale",void 0),(0,o._)([(0,d.r)(["web-map","portal-item"],"minScale",["layers"])],W.prototype,"readMinScale",null),(0,o._)([(0,u.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],W.prototype,"maxScale",void 0),(0,o._)([(0,d.r)(["web-map","portal-item"],"maxScale",["layers"])],W.prototype,"readMaxScale",null),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"multipointLayer",null),(0,o._)([(0,u.Cb)({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],W.prototype,"operationalLayerType",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"pointLayer",null),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"polygonLayer",null),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"polylineLayer",null),(0,o._)([(0,u.Cb)({type:D.Z})],W.prototype,"spatialReference",void 0),(0,o._)([(0,d.r)(["web-map","portal-item"],"spatialReference",["layers"])],W.prototype,"readSpatialReference",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],W.prototype,"sublayers",void 0),(0,o._)([(0,d.r)("web-map","sublayers",["layers"])],W.prototype,"readSublayers",null),(0,o._)([(0,m.c)("web-map","sublayers")],W.prototype,"writeSublayers",null),(0,o._)([(0,u.Cb)({readOnly:!0})],W.prototype,"textLayer",null),(0,o._)([(0,u.Cb)()],W.prototype,"title",void 0),(0,o._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],W.prototype,"type",void 0),W=(0,o._)([(0,c.j)("esri.layers.MapNotesLayer")],W);const X=W},93711:(e,t,r)=>{r.d(t,{S:()=>i,X:()=>o});const o=1;function i(e,t){let r=0;for(const o of t){const t=o.attributes?.[e];"number"==typeof t&&isFinite(t)&&(r=Math.max(r,t))}return r}}}]);