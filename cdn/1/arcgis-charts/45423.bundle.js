"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[45423,55831,49112],{8308:(e,a,r)=>{r.d(a,{V:()=>n});var t=r(40371);async function n(e,a){const r=await(0,t.T)(e,a);r.layers=r.layers.filter(i);const n={serviceJSON:r};if((r.currentVersion??0)<10.5)return n;const y=await(0,t.T)(e+"/layers",a);return n.layersJSON={layers:y.layers.filter(i),tables:y.tables},n}function i(e){return!e.type||"Feature Layer"===e.type}},45423:(e,a,r)=>{r.r(a),r.d(a,{populateOperationalLayers:()=>o});var t=r(6865),n=(r(39994),r(78668)),i=r(92557),y=r(53110);function s(e,a){return!(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)&&e.featureCollectionType===a}var l=r(55831),c=r(16603);async function o(e,a,r){if(!a)return;const t=[];for(const e of a){const a=b(e,r);"GroupLayer"===e.layerType?t.push(G(a,e,r)):t.push(a)}const i=await(0,n.as)(t);for(const a of i)a.value&&e.add(a.value)}const u={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",OGCFeatureLayer:"OGCFeatureLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",GeoJSON:"GeoJSONLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer",Voxel:"VoxelLayer",LineOfSightLayer:"LineOfSightLayer"},L={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},d={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",ArcGISSceneServiceLayer:"SceneLayer",DefaultTileLayer:"TileLayer"},p={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoRSS:"GeoRSSLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},f={ArcGISFeatureLayer:"FeatureLayer"},m={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"},S={...p,LinkChartLayer:"LinkChartLayer"},w={...f},I={...m};async function b(e,a){return async function(e,a,r){const t=new e;return t.read(a,r.context),"group"===t.type&&T(a)&&await async function(e,a,r){const t=i.T.FeatureLayer,n=await t(),y=a.featureCollection,s=y?.showLegend,l=y?.layers?.map(((t,i)=>{const y=new n;y.read(t,r);const l={...r,ignoreDefaults:!0};return y.read({id:`${e.id}-sublayer-${i}`,visibility:a.visibleLayers?.includes(i)??!0},l),null!=s&&y.read({showLegend:s},l),y}));e.layers.addMany(l??[])}(t,a,r.context),await(0,c.y)(t,r.context),t}(await async function(e,a){const r=a.context,t=h(r);let n=e.layerType||e.type;!n&&a&&a.defaultLayerType&&(n=a.defaultLayerType);const c=t[n];let o=c?i.T[c]:i.T.UnknownLayer;if(g(e)){const a=r?.portal;if(e.itemId){const r=new y.default({id:e.itemId,portal:a});await r.load();const t=(await(0,l.selectLayerClassPath)(r)).className||"UnknownLayer";o=i.T[t]}}else"ArcGISFeatureLayer"===n?function(e){return s(e,"notes")}(e)||function(e){return s(e,"markup")}(e)?o=i.T.MapNotesLayer:function(e){return s(e,"route")}(e)?o=i.T.RouteLayer:T(e)&&(o=i.T.GroupLayer):e.wmtsInfo&&e.wmtsInfo.url&&e.wmtsInfo.layerIdentifier?o=i.T.WMTSLayer:"WFS"===n&&"2.0.0"!==e.wfsInfo?.version&&(o=i.T.UnsupportedLayer);return o()}(e,a),e,a)}function T(e){return"ArcGISFeatureLayer"===e.layerType&&!g(e)&&(e.featureCollection?.layers?.length??0)>1}function g(e){return"Feature Collection"===e.type}function h(e){let a;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":a=d;break;case"ground":a=L;break;default:a=u}break;case"link-chart":switch(e.layerContainerType){case"basemap":a=I;break;case"tables":a=w;break;default:a=S}break;default:switch(e.layerContainerType){case"basemap":a=m;break;case"tables":a=f;break;default:a=p}}return a}async function G(e,a,r){const n=new t.Z,i=o(n,Array.isArray(a.layers)?a.layers:[],r);try{const a=await e;try{if(await i,"group"===a.type)return a.layers.addMany(n),a}catch(e){a.destroy();for(const e of n)e.destroy();throw e}}catch(e){throw e}}},92557:(e,a,r)=>{r.d(a,{T:()=>t});const t={BingMapsLayer:async()=>(await r.e(31968).then(r.bind(r,31968))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(77324),r.e(46273),r.e(80349),r.e(59871)]).then(r.bind(r,59871))).default,CSVLayer:async()=>(await r.e(89849).then(r.bind(r,89849))).default,DimensionLayer:async()=>(await r.e(10442).then(r.bind(r,10442))).default,ElevationLayer:async()=>(await r.e(90451).then(r.bind(r,90451))).default,FeatureLayer:async()=>(await Promise.resolve().then(r.bind(r,12926))).default,GeoJSONLayer:async()=>(await r.e(81655).then(r.bind(r,81655))).default,GeoRSSLayer:async()=>(await r.e(84417).then(r.bind(r,84417))).default,GroupLayer:async()=>(await r.e(13840).then(r.bind(r,13840))).default,ImageryLayer:async()=>(await Promise.all([r.e(5499),r.e(31434),r.e(73954),r.e(86776)]).then(r.bind(r,38645))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(5499),r.e(31434),r.e(494),r.e(73954),r.e(50455)]).then(r.bind(r,50455))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(77324),r.e(96479)]).then(r.bind(r,96479))).default,KMLLayer:async()=>(await r.e(80693).then(r.bind(r,80693))).default,LineOfSightLayer:async()=>(await r.e(64277).then(r.bind(r,64277))).default,LinkChartLayer:async()=>(await Promise.all([r.e(3362),r.e(54718),r.e(2264),r.e(89240)]).then(r.bind(r,89240))).default,MapImageLayer:async()=>(await Promise.all([r.e(54666),r.e(69420)]).then(r.bind(r,69420))).default,MapNotesLayer:async()=>(await r.e(50849).then(r.bind(r,50849))).default,MediaLayer:async()=>(await r.e(44130).then(r.bind(r,44130))).default,OGCFeatureLayer:async()=>(await r.e(53963).then(r.bind(r,53963))).default,OpenStreetMapLayer:async()=>(await r.e(33206).then(r.bind(r,81388))).default,OrientedImageryLayer:async()=>(await r.e(93414).then(r.bind(r,93414))).default,PointCloudLayer:async()=>(await r.e(73108).then(r.bind(r,73108))).default,RouteLayer:async()=>(await Promise.all([r.e(63970),r.e(15015)]).then(r.bind(r,15015))).default,SceneLayer:async()=>(await Promise.all([r.e(77324),r.e(46273),r.e(80349),r.e(74606)]).then(r.bind(r,74606))).default,StreamLayer:async()=>(await r.e(75609).then(r.bind(r,75609))).default,SubtypeGroupLayer:async()=>(await r.e(27764).then(r.bind(r,27764))).default,TileLayer:async()=>(await Promise.all([r.e(54666),r.e(75369)]).then(r.bind(r,75369))).default,UnknownLayer:async()=>(await r.e(40081).then(r.bind(r,40081))).default,UnsupportedLayer:async()=>(await r.e(74864).then(r.bind(r,74864))).default,VectorTileLayer:async()=>(await Promise.all([r.e(83319),r.e(63043),r.e(52138)]).then(r.bind(r,16358))).default,VoxelLayer:async()=>(await r.e(85519).then(r.bind(r,85519))).default,WFSLayer:async()=>(await r.e(84420).then(r.bind(r,84420))).default,WMSLayer:async()=>(await r.e(61936).then(r.bind(r,61936))).default,WMTSLayer:async()=>(await r.e(69862).then(r.bind(r,69862))).default,WebTileLayer:async()=>(await r.e(89859).then(r.bind(r,89859))).default}},84513:(e,a,r)=>{r.d(a,{Y:()=>y,h:()=>i});var t=r(3466),n=r(93968);function i(e){return{origin:"portal-item",url:(0,t.mN)(e.itemUrl),portal:e.portal||n.Z.getDefault(),portalItem:e,readResourcePaths:[]}}function y(e){return{origin:"portal-item",messages:[],writtenProperties:[],url:e.itemUrl?(0,t.mN)(e.itemUrl):null,portal:e.portal||n.Z.getDefault(),portalItem:e}}},49112:(e,a,r)=>{r.r(a),r.d(a,{getFirstLayerOrTableId:()=>I,getNumLayersAndTables:()=>b,getSubtypeGroupLayerIds:()=>T,load:()=>d,preprocessFSItemData:()=>w});var t=r(70375),n=r(38481),i=r(20692),y=r(8308),s=r(93968),l=r(53110),c=r(84513),o=r(31370),u=r(16603),L=r(40371);async function d(e,a){const r=e.instance.portalItem;if(r&&r.id)return await r.load(a),function(e){const a=e.instance.portalItem;if(!a?.type||!e.supportedTypes.includes(a.type))throw new t.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a?.type,expectedType:e.supportedTypes.join(", ")})}(e),async function(e,a){const r=e.instance,n=r.portalItem;if(!n)return;const{url:i,title:s}=n,l=(0,c.h)(n);if("group"===r.type)return r.read({title:s},l),async function(e,a){let r;const{portalItem:n}=e;if(!n)return;const i=n.type,s=a.layerModuleTypeMap,l=(0,o._$)(n,"Oriented Imagery Layer")??!1;switch(i){case"Feature Service":r=l?s.OrientedImageryLayer:s.FeatureLayer;break;case"Stream Service":r=s.StreamLayer;break;case"Scene Service":r=s.SceneLayer;break;case"Feature Collection":r=s.FeatureLayer;break;default:throw new t.Z("portal:unsupported-item-type-as-group",`The item type '${i}' is not supported as a 'IGroupLayer'`)}let[c,u]=await Promise.all([r(),S(a)]),d=()=>c;if("Feature Service"===i){if(u=n.url?await w(u,n.url):{},T(u).length){const e=s.SubtypeGroupLayer,a=await e();d=e=>"SubtypeGroupLayer"===e.layerType?a:c}return f(e,d,u,await async function(e){const{layersJSON:a}=await(0,y.V)(e);if(!a)return null;const r=[...a.layers,...a.tables];return e=>r.find((a=>a.id===e.id))}(n.url))}return b(u)>0?f(e,d,u):async function(e,a){const{portalItem:r}=e;if(!r?.url)return;const t=await(0,L.T)(r.url);t&&f(e,a,{layers:t.layers?.map(p),tables:t.tables?.map(p)})}(e,d)}(r,e);i&&r.read({url:i},l);const d=await S(e,a);return d&&r.read(d,l),r.resourceReferences={portalItem:n,paths:l.readResourcePaths??[]},"subtype-group"!==r.type&&r.read({title:s},l),(0,u.y)(r,l)}(e,a)}function p(e){return{id:e.id,name:e.name}}function f(e,a,r,y){let s=r.layers||[];const c=r.tables||[];if("Feature Collection"===e.portalItem?.type&&(s.forEach((e=>{"Table"===e?.layerDefinition?.type&&c.push(e)})),s=s.filter((e=>"Table"!==e?.layerDefinition?.type))),"coverage"in r){const a=function(e){const{coverage:a}=e;if(!a)return null;const r=new URL(a);if(a.toLowerCase().includes("item.html")){const e=r.searchParams.get("id"),a=r.origin;return n.Z.fromPortalItem({portalItem:new l.default({id:e,url:a})})}if((0,i.B5)(a))return n.Z.fromArcGISServerUrl({url:a});throw new t.Z("portal:oriented-imagery-layer-coverage","the provided coverage url couldn't be loaded as a layer")}(r);a&&e.add(a)}s.reverse().forEach((t=>{const n=y?.(t);if(n||!y){const i=m(e,a(t),r,t,n);e.add(i)}})),c.reverse().forEach((t=>{const n=y?.(t);if(n||!y){const i=m(e,a(t),r,t,n);e.tables.add(i)}}))}function m(e,a,r,t,n){const i=e.portalItem,y=new a({portalItem:i.clone(),layerId:t.id});if("sourceJSON"in y&&(y.sourceJSON=n),"subtype-group"!==y.type&&(y.sublayerTitleMode="service-name"),"Feature Collection"===i.type){const e={origin:"portal-item",portal:i.portal||s.Z.getDefault()};y.read(t,e);const a=r.showLegend;null!=a&&y.read({showLegend:a},e)}return y}async function S(e,a){if(!1===e.supportsData)return;const r=e.instance,t=r.portalItem;if(!t)return;let n=null;try{n=await t.fetchData("json",a)}catch(e){}if(function(e){return"stream"!==e.type&&"oriented-imagery"!==e.type&&"layerId"in e}(r)){let e=null,a=!0;if(n&&b(n)>0){if(null==r.layerId){const e=T(n);r.layerId="subtype-group"===r.type?e?.[0]:I(n)}e=function(e,a){const{layerId:r}=a,t=e.layers?.find((e=>e.id===r))||e.tables?.find((e=>e.id===r));return t&&function(e,a){return!("feature"===a.type&&"layerType"in e&&"SubtypeGroupLayer"===e.layerType||"subtype-group"===a.type&&!("layerType"in e))}(t,a)?t:null}(n,r),e&&(1===b(n)&&(a=!1),null!=n.showLegend&&(e.showLegend=n.showLegend))}return a&&"sublayerTitleMode"in r&&"service-name"!==r.sublayerTitleMode&&(r.sublayerTitleMode="item-title-and-service-name"),e}return n}async function w(e,a){if(null==e?.layers||null==e?.tables){const r=await(0,L.T)(a);(e=e||{}).layers=e.layers||r?.layers,e.tables=e.tables||r?.tables}return e}function I(e){const a=e.layers;if(a&&a.length)return a[0].id;const r=e.tables;return r&&r.length?r[0].id:null}function b(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function T(e){const a=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}},55831:(e,a,r)=>{r.r(a),r.d(a,{fromItem:()=>o,selectLayerClassPath:()=>u});var t=r(70375),n=r(54957),i=r(92557),y=r(53110),s=r(49112),l=r(31370),c=r(40371);async function o(e){!e.portalItem||e.portalItem instanceof y.default||(e={...e,portalItem:new y.default(e.portalItem)});const a=await async function(e){return await e.load(),async function(e){const a=e.className,r=i.T[a];return{constructor:await r(),properties:e.properties}}(await u(e))}(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})}async function u(e){switch(e.type){case"Map Service":return async function(e){return await async function(e){return(await(0,c.T)(e.url)).tileInfo}(e)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e);case"Feature Service":return async function(e){if((0,l._$)(e,"Oriented Imagery Layer"))return async function(e){return await e.load(),{className:"OrientedImageryLayer",properties:await e.fetchData()}}(e);const a=await L(e);if("object"==typeof a){const e={};return null!=a.id&&(e.layerId=a.id),{className:a.className||"FeatureLayer",properties:e}}return{className:"GroupLayer"}}(e);case"Feature Collection":return async function(e){await e.load();const a=(0,l._$)(e,"Map Notes"),r=(0,l._$)(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if((0,l._$)(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return 1===(0,s.getNumLayersAndTables)(t)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return async function(e){const a=await L(e);if("object"==typeof a){const r={};let t;if(null!=a.id?(r.layerId=a.id,t=`${e.url}/layers/${a.id}`):t=e.url,e.typeKeywords?.length)for(const a of Object.keys(n.fb))if(e.typeKeywords.includes(a))return{className:n.fb[a]};const i=await(0,c.T)(t);return{className:n.fb[i?.layerType]||"SceneLayer",properties:r}}if(!1===a){const a=await(0,c.T)(e.url);return"Voxel"===a?.layerType?{className:"VoxelLayer"}:{className:"GroupLayer"}}return{className:"GroupLayer"}}(e);case"Image Service":return async function(e){await e.load();const a=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(a.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(a.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await e.fetchData(),t=r?.layerType;if("ArcGISTiledImageServiceLayer"===t)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===t)return{className:"ImageryLayer"};const n=await(0,c.T)(e.url),i=n.cacheType?.toLowerCase(),y=n.capabilities?.toLowerCase().includes("tilesonly");return"map"===i||y?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:throw new t.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function L(e){const a=e.url;if(!a||/\/\d+$/.test(a))return{};await e.load();const r=await e.fetchData();if("Feature Service"===e.type){const e=d(await(0,s.preprocessFSItemData)(r,a));if("object"==typeof e){const a=(0,s.getSubtypeGroupLayerIds)(r);e.className=null!=e.id&&a.includes(e.id)?"SubtypeGroupLayer":"FeatureLayer"}return e}return(0,s.getNumLayersAndTables)(r)>0?d(r):d(await(0,c.T)(a))}function d(e){return 1===(0,s.getNumLayersAndTables)(e)&&{id:(0,s.getFirstLayerOrTableId)(e)}}},40371:(e,a,r)=>{r.d(a,{T:()=>n});var t=r(66341);async function n(e,a){const{data:r}=await(0,t.default)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return r}}}]);