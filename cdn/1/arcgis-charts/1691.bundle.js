"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[1691],{1691:(e,t,n)=>{n.r(t),n.d(t,{default:()=>g});var r=n(67979),o=n(70375),s=n(13802),i=n(78668),a=n(35925),u=n(12065),l=n(4811),c=n(66069),p=n(54718),y=n(61957),f=n(24366),d=n(48662),m=n(28790);class g{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{const{objectIdField:t}=this._queryEngine,n=await(0,d.Bm)(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await(0,y.O3)(n),(0,i.k_)(e);const r=(0,y.lG)(n,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!(0,a.fS)(this._queryEngine.spatialReference,a.Zn))for(const e of r)null!=e.geometry&&(e.geometry=(0,u.GH)((0,c.iV)((0,u.di)(e.geometry,this._queryEngine.geometryType,!1,!1),a.Zn,this._queryEngine.spatialReference)));let o=1;for(const e of r){const n={};(0,f.O0)(this._fieldsIndex,n,e.attributes,!0),e.attributes=n,null==e.attributes[t]&&(e.objectId=e.attributes[t]=o++)}return r}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:n,getFeatureOutputFormat:r,spatialReference:o,fields:s,geometryType:a,featureType:u,objectIdField:c,customParameters:y}=e;this._featureType=u,this._customParameters=y,this._getFeatureUrl=n,this._getFeatureOutputFormat=r,this._fieldsIndex=new m.Z(s),await this._checkProjection(o),(0,i.k_)(t),this._queryEngine=new p.q({fields:s,geometryType:a,hasM:!1,hasZ:!1,objectIdField:c,spatialReference:o,timeInfo:null,featureStore:new l.Z({geometryType:a,hasM:!1,hasZ:!1})});const f=await this._snapshotFeatures(t.signal);return this._queryEngine.featureStore.addMany(f),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new o.Z("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this._customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,r.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,i.D_)(e)||s.Z.getLogger("esri.layers.WFSLayer").error(new o.Z("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await(0,c._W)(a.Zn,e)}catch{throw new o.Z("unsupported-projection","Projection not supported",{spatialReference:e})}}}},61957:(e,t,n)=>{n.d(t,{O3:()=>S,lG:()=>x,my:()=>T,q9:()=>u});var r=n(70375),o=n(59958),s=n(15540),i=n(14845);const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return a[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*c(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function p(e){for(const t of e)if(t.length>2)return!0;return!1}function y(e){let t=0;for(let n=0;n<e.length;n++){const r=e[n],o=e[(n+1)%e.length];t+=r[0]*o[1]-o[0]*r[1]}return t<=0}function f(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function d(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return h(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const r of t.coordinates)h(e,r,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const r of t.coordinates){m(e,r[0],n);for(let t=1;t<r.length;t++)g(e,r[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return b(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const r=t.coordinates;m(e,r[0],n);for(let t=1;t<r.length;t++)g(e,r[t],n);return e}(e,t,n)}}function m(e,t,n){const r=f(t);!function(e){return!y(e)}(r)?h(e,r,n):w(e,r,n)}function g(e,t,n){const r=f(t);!function(e){return y(e)}(r)?h(e,r,n):w(e,r,n)}function h(e,t,n){for(const r of t)b(e,r,n);e.lengths.push(t.length)}function w(e,t,n){for(let r=t.length-1;r>=0;r--)b(e,t[r],n);e.lengths.push(t.length)}function b(e,t,n){const[r,o,s]=t;e.coords.push(r,o),n.hasZ&&e.coords.push(s||0)}function F(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function S(e){if(!e)throw new r.Z("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new r.Z("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,o=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!o.test(n))throw new r.Z("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function T(e,t={}){const n=[],r=new Set,o=new Set;let s,a=!1,y=null,f=!1,{geometryType:d=null}=t,m=!1;for(const t of l(e)){const{geometry:e,properties:l,id:g}=t;if((!e||(d||(d=u(e.type)),u(e.type)===d))&&(a||(a=p(c(e))),f||(f=null!=g,f&&(s=typeof g,l&&(y=Object.keys(l).filter((e=>l[e]===g))))),l&&y&&f&&null!=g&&(y.length>1?y=y.filter((e=>l[e]===g)):1===y.length&&(y=l[y[0]]===g?y:[])),!m&&l)){let e=!0;for(const t in l){if(r.has(t))continue;const s=l[t];if(null==s){e=!1,o.add(t);continue}const a=F(s);if("unknown"===a){o.add(t);continue}o.delete(t),r.add(t);const u=(0,i.q6)(t);u&&n.push({name:u,alias:t,type:a})}m=e}}const g=(0,i.q6)(1===y?.length&&y[0]||null)??void 0;if(g)for(const e of n)if(e.name===g&&(0,i.H7)(e)){e.type="esriFieldTypeOID";break}return{fields:n,geometryType:d,hasZ:a,objectIdFieldName:g,objectIdFieldType:s,unknownFields:Array.from(o)}}function x(e,t){return Array.from(function*(e,t={}){const{geometryType:n,objectIdField:r}=t;for(const i of e){const{geometry:e,properties:a,id:l}=i;if(e&&u(e.type)!==n)continue;const c=a||{};let p;r&&(p=c[r],null==l||p||(c[r]=p=l));const y=new o.u_(e?d(new s.Z,e,t):null,c,null,p??void 0);yield y}}(l(e),t))}},24366:(e,t,n)=>{n.d(t,{O0:()=>p,av:()=>a,b:()=>m,d1:()=>l,og:()=>d});var r=n(35925),o=n(14845);class s{constructor(){this.code=null,this.description=null}}class i{constructor(e){this.error=new s,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function a(e){return new i(e)}class u{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function l(e){return new u(e)}const c=new Set;function p(e,t,n,r=!1,s){c.clear();for(const i in n){const u=e.get(i);if(!u)continue;const l=n[i],p=y(u,l);if(p!==l&&s&&s.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:u,originalValue:l,sanitizedValue:p}}),c.add(u.name),u&&(r||u.editable)){const e=(0,o.Qc)(u,p);if(e)return a((0,o.vP)(e,u,p));t[u.name]=p}}for(const t of e?.requiredFields??[])if(!c.has(t.name))return a(`missing required field "${t.name}"`);return null}function y(e,t){let n=t;return"string"==typeof t&&(0,o.H7)(e)?n=parseFloat(t):null!=t&&(0,o.qN)(e)&&"string"!=typeof t&&(n=String(t)),(0,o.Pz)(n)}let f;function d(e,t){if(!e||!(0,r.JY)(t))return e;if("rings"in e||"paths"in e){if(null==f)throw new TypeError("geometry engine not loaded");return f.simplify(t,e)}return e}async function m(e,t){!(0,r.JY)(e)||"esriGeometryPolygon"!==t&&"esriGeometryPolyline"!==t||await async function(){return null==f&&(f=await Promise.all([n.e(89067),n.e(8923)]).then(n.bind(n,8923))),f}()}},48662:(e,t,n)=>{n.d(t,{M8:()=>F,ft:()=>j,FU:()=>N,Bm:()=>D,be:()=>I,eB:()=>R}),n(91957);var r=n(66341),o=n(70375),s=n(99118),i=n(78668),a=n(3466),u=n(92376),l=n(35925),c=n(59659),p=n(61957);function y(e){return function(e){const t=f.exec(e);if(!t?.groups)return null;const n=t.groups,r=+n.year,o=+n.month-1,s=+n.day,i=+(n.hours??"0"),a=+(n.minutes??"0"),u=+(n.seconds??"0");if(i>23)return null;if(a>59)return null;if(u>59)return null;const l=n.ms??"0",c=l?+l.padEnd(3,"0").substring(0,3):0;let p;if(n.isUTC)p=Date.UTC(r,o,s,i,a,u,c);else if(n.offsetSign){const e=+n.offsetHours,t=+n.offsetMinutes;p=6e4*("+"===n.offsetSign?-1:1)*(60*e+t)+Date.UTC(r,o,s,i,a,u,c)}else p=new Date(r,o,s,i,a,u,c).getTime();return Number.isNaN(p)?null:p}(e)??function(e){const t=new Date(e).getTime();return Number.isNaN(t)?null:t}(e)}const f=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/;var d=n(94477),m=n(12512),g=n(14685),h=n(91772);const w="xlink:href",b="2.0.0",F="__esri_wfs_id__",S="wfs-layer:getWFSLayerTypeInfo-error",T="wfs-layer:empty-service",x="wfs-layer:feature-type-not-found",E="wfs-layer:geojson-not-supported",_="wfs-layer:kvp-encoding-not-supported",P="wfs-layer:malformed-json",C="wfs-layer:unknown-geometry-type",k="wfs-layer:unknown-field-type",Z="wfs-layer:unsupported-spatial-reference",q="wfs-layer:unsupported-wfs-version";async function N(e,t){const n=function(e){const t=L(e);(function(e){const t=e.firstElementChild?.getAttribute("version");if(t&&t!==b)throw new o.Z(q,`Unsupported WFS version ${t}. Supported version: ${b}`)})(t),V(t);const n=t.firstElementChild,r=(0,s.Fs)(function(e){return(0,d.H)(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},n=new Set([4326]),r=e=>{const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(t)||n.add(t)};return(0,d.h)(e,{Name:e=>{const{name:n,prefix:r}=$(e.textContent);t.typeName=`${r}:${n}`,t.name=n,t.namespacePrefix=r,t.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=function(e){let t,n,r,o;for(const s of e.children)switch(s.localName){case"LowerCorner":[t,n]=s.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[r,o]=s.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:n,xmax:r,ymax:o,spatialReference:l.Zn}}(e)},DefaultSRS:r,DefaultCRS:r,OtherSRS:r,OtherCRS:r}),t.title||(t.title=t.name),t.supportedSpatialReferences.push(...n),t}}})}(n));return{operations:v(n),get featureTypes(){return Array.from(r())},readFeatureTypes:r}}((await(0,r.default)(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:b,...t?.customParameters},signal:t?.signal})).data);return function(e,t){(0,a.$U)(e)&&((0,a.D6)(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=(0,a.hO)(t.operations.DescribeFeatureType.url)),(0,a.D6)(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=(0,a.hO)(t.operations.GetFeature.url)))}(e,n),n}const G=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function v(e){let t=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if((0,d.h)(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(w)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(w)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(w)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;t&&G.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!t)throw new o.Z(_,"WFS service doesn't support key/value pair (KVP) encoding");if(null==n.GetFeature.outputFormat)throw new o.Z(E,"WFS service doesn't support GeoJSON output format");return n}function j(e,t,n){return(0,s.sE)(e,(e=>n?e.name===t&&e.namespaceUri===n:e.typeName===t||e.name===t))}async function I(e,t,n,r={}){const{featureType:s,extent:a}=await async function(e,t,n,r={}){const{spatialReference:s=g.Z.WGS84}=r,i=e.readFeatureTypes(),a=t?j(i,t,n):i.next().value;if(null==a)throw t?new o.Z(x,`The type '${t}' could not be found in the service`):new o.Z(T,"The service is empty");let c=new h.Z({...a.extent,spatialReference:s});if(!(0,l.fS)(s,l.Zn))try{await(0,u.initializeProjection)(l.Zn,s,void 0,r),c=(0,u.project)(c,l.Zn)}catch{throw new o.Z(Z,"Projection not supported")}return{extent:c,spatialReference:s,featureType:a}}(e,t,n,r),{fields:c,geometryType:p,swapXY:y,objectIdField:f,geometryField:d}=await async function(e,t,n={}){const[r,s]=await(0,i.as)([M(e.operations.DescribeFeatureType.url,t,n),A(e,t,n)]);if(r.error||s.error)throw new o.Z(S,`An error occurred while getting info about the feature type '${t}'`,{error:r.error||s.error});const{fields:a,errors:u}=r.value??{},l=r.value?.geometryType||s.value?.geometryType,c=s.value?.swapXY??!1;if(null==l)throw new o.Z(C,`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:l,fields:a,errors:u});return{...R(a??[]),geometryType:l,swapXY:c}}(e,s.typeName,r);return{url:e.operations.GetCapabilities.url,name:s.name,namespaceUri:s.namespaceUri,fields:c,geometryField:d,geometryType:p,objectIdField:f,spatialReference:r.spatialReference??g.Z.WGS84,extent:a,swapXY:y,wfsCapabilities:e,customParameters:r.customParameters}}function R(e){const t=e.find((e=>"geometry"===e.type));let n=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),n||(n=new m.Z({name:F,type:"oid",alias:F}),e.unshift(n)),{geometryField:t?.name??null,objectIdField:n.name,fields:e}}async function A(e,t,n={}){let o,s=!1;const[i,a]=await Promise.all([D(e.operations.GetFeature.url,t,e.operations.GetFeature.outputFormat,{...n,count:1}),(0,r.default)(e.operations.GetFeature.url,{responseType:"text",query:U(t,void 0,{...n,count:1}),signal:n?.signal})]),u="FeatureCollection"===i.type&&i.features[0]?.geometry;if(u){let e;switch(o=c.M.fromJSON((0,p.q9)(u.type)),u.type){case"Point":e=u.coordinates;break;case"LineString":case"MultiPoint":e=u.coordinates[0];break;case"MultiLineString":case"Polygon":e=u.coordinates[0][0];break;case"MultiPolygon":e=u.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(a.data);if(t){const n=e[0].toFixed(3),r=e[1].toFixed(3),o=parseFloat(t[1]).toFixed(3);n===parseFloat(t[2]).toFixed(3)&&r===o&&(s=!0)}}return{geometryType:o,swapXY:s}}async function M(e,t,n){return function(e,t){const{name:n}=$(e),r=L(t);V(r);const i=(0,s.sE)((0,d.H)(r.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:$(e.getAttribute("type")).name})}),(({name:e})=>e===n));if(null!=i){const e=(0,s.sE)((0,d.H)(r.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===i.typeName));if(null!=e)return function(e){const t=[],n=[];let r;const s=(0,d.H)(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const i of s){const s=i.getAttribute("name");if(!s)continue;let a,u;if(i.hasAttribute("type")?a=$(i.getAttribute("type")).name:(0,d.h)(i,{simpleType:{restriction:e=>(a=$(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!a)continue;const l="true"===i.getAttribute("nillable");let c=!1;switch(a.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":n.push(new m.Z({name:s,alias:s,type:"integer",nullable:l}));break;case"float":case"double":case"decimal":n.push(new m.Z({name:s,alias:s,type:"double",nullable:l}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":n.push(new m.Z({name:s,alias:s,type:"string",nullable:l,length:u??255}));break;case"datetime":case"date":n.push(new m.Z({name:s,alias:s,type:"date",nullable:l,length:u??36}));break;case"pointpropertytype":r="point",c=!0;break;case"multipointpropertytype":r="multipoint",c=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":r="polyline",c=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":r="polygon",c=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":c=!0,t.push(new o.Z(C,`geometry type '${a}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:t.push(new o.Z(k,`Unknown field type '${a}'`,{type:(new XMLSerializer).serializeToString(e)}))}c&&n.push(new m.Z({name:s,alias:s,type:"geometry",nullable:l}))}for(const e of n)if("integer"===e.type&&!e.nullable&&O.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:r,fields:n,errors:t}}(e)}throw new o.Z(x,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(r)})}(t,(await(0,r.default)(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:b,TYPENAME:t,...n?.customParameters},signal:n?.signal})).data)}const O=new Set(["objectid","fid"]);async function D(e,t,n,s){let{data:i}=await(0,r.default)(e,{responseType:"text",query:U(t,n,s),signal:s?.signal});i=i.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if(s?.dateFields?.length){const e=new Set(s.dateFields);return JSON.parse(i,((t,n)=>e.has(t)?y(n):n))}return JSON.parse(i)}catch(e){throw new o.Z(P,"Error while parsing the response",{response:i,error:e})}}function U(e,t,n){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:b,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:n?.startIndex,COUNT:n?.count,...n?.customParameters}}function L(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function $(e){const[t,n]=e.split(":");return{prefix:n?t:"",name:n??t}}function V(e){let t="",n="";if((0,d.h)(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new o.Z(`wfs-layer:${t}`,n)}},94477:(e,t,n)=>{function r(e,t){if(e&&t)for(const n of e.children)if(n.localName in t){const e=t[n.localName];if("function"==typeof e){const t=e(n);t&&r(n,t)}else r(n,e)}}function*o(e,t){for(const n of e.children)if(n.localName in t){const e=t[n.localName];"function"==typeof e?yield e(n):yield*o(n,e)}}n.d(t,{H:()=>o,h:()=>r})}}]);