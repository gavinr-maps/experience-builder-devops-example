"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[59955],{59955:(e,t,n)=>{n.r(t),n.d(t,{default:()=>I});var s=n(66341),i=n(67979),r=n(70375),o=n(13802),a=n(78668),u=n(53736),l=n(35925),c=n(12065),d=n(4811),p=n(66069),y=n(54718),f=n(61957),h=n(40400),g=n(24366),m=n(28790),_=n(86349),b=n(14845);const w={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class I{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const n=[];await this._checkProjection(e.spatialReference);let s=null;e.url&&(s=await this._fetch(t?.signal));const i=(0,f.my)(s,{geometryType:e.geometryType}),o=e.fields||i.fields||[],a=null!=e.hasZ?e.hasZ:i.hasZ,u=i.geometryType;let c=e.objectIdField||i.objectIdFieldName||"__OBJECTID";const p=e.spatialReference||l.Zn;let g=e.timeInfo;o===i.fields&&i.unknownFields.length>0&&n.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:i.unknownFields}});let I=new m.Z(o).get(c);I?("esriFieldTypeString"!==I.type&&(I.type="esriFieldTypeOID"),I.editable=!1,I.nullable=!1,c=I.name):(I={alias:c,name:c,type:"string"===i.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(I));const F={};for(const e of o){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new r.Z("geojson-layer:invalid-field-name","field name is missing",{field:e});if(!_.v.jsonValues.includes(e.type))throw new r.Z("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e});if(e.name!==I.name){const t=(0,b.os)(e);void 0!==t&&(F[e.name]=t)}}this._fieldsIndex=new m.Z(o);const E=this._fieldsIndex.requiredFields.indexOf(I);if(E>-1&&this._fieldsIndex.requiredFields.splice(E,1),g){if(g.startTimeField){const e=this._fieldsIndex.get(g.startTimeField);e?(g.startTimeField=e.name,e.type="esriFieldTypeDate"):g.startTimeField=null}if(g.endTimeField){const e=this._fieldsIndex.get(g.endTimeField);e?(g.endTimeField=e.name,e.type="esriFieldTypeDate"):g.endTimeField=null}if(g.trackIdField){const e=this._fieldsIndex.get(g.trackIdField);e?g.trackIdField=e.name:(g.trackIdField=null,n.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:g}}))}g.startTimeField||g.endTimeField||(n.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:g}}),g=null)}const T=u?(0,h.bU)(u):void 0,S={warnings:n,featureErrors:[],layerDefinition:{...w,drawingInfo:T??void 0,templates:(0,h.Hq)(F),extent:void 0,geometryType:u,objectIdField:c,fields:o,hasZ:!!a,timeInfo:g}};this._queryEngine=new y.q({fields:o,geometryType:u,hasM:!1,hasZ:a,objectIdField:c,spatialReference:p,timeInfo:g,featureStore:new d.Z({geometryType:u,hasM:!1,hasZ:a}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,h.Dm)(F,c);const q=await this._createFeatures(s);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,q);const j=this._normalizeFeatures(q,S.warnings,S.featureErrors);this._queryEngine.featureStore.addMany(j);const{fullExtent:x,timeExtent:P}=await this._queryEngine.fetchRecomputedExtents();if(S.layerDefinition.extent=x,P){const{start:e,end:t}=P;S.layerDefinition.timeInfo.timeExtent=[e,t]}return S}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([(0,g.b)(t,n),(0,p._W)(e.adds,t),(0,p._W)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,i.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,a.D_)(e)||o.Z.getLogger("esri.layers.GeoJSONLayer").error(new r.Z("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:n}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:n,objectIdField:s}=this._queryEngine,i=(0,f.lG)(e,{geometryType:t,hasZ:n,objectIdField:s});if(!(0,l.fS)(this._queryEngine.spatialReference,l.Zn))for(const e of i)null!=e.geometry&&(e.geometry=(0,c.GH)((0,p.iV)((0,c.di)(e.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),l.Zn,this._queryEngine.spatialReference)));return i}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:n}=this._loadOptions,i=(await(0,s.default)(t,{responseType:"json",query:{...n},signal:e})).data;return await(0,f.O3)(i),i}_normalizeFeatures(e,t,n){const{objectIdField:s}=this._queryEngine,i=[];for(const r of e){const e=this._createDefaultAttributes(),o=(0,g.O0)(this._fieldsIndex,e,r.attributes,!0,t);o?n?.push(o):(this._assignObjectId(e,r.attributes,!0),r.attributes=e,r.objectId=e[s],i.push(r))}return i}async _applyEdits(e){const{adds:t,updates:n,deletes:s}=e,i={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(i,t),n&&n.length&&this._applyUpdateEdits(i,n),s&&s.length){for(const e of s)i.deleteResults.push((0,g.d1)(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:r,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:o,featureEditResults:i}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:s,hasM:i,hasZ:r,objectIdField:o,spatialReference:a,featureStore:l}=this._queryEngine,d=[];for(const i of t){if(i.geometry&&s!==(0,u.Ji)(i.geometry)){n.push((0,g.av)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=(0,g.O0)(this._fieldsIndex,t,i.attributes);if(r)n.push(r);else{if(this._assignObjectId(t,i.attributes),i.attributes=t,null!=i.uid){const t=i.attributes[o];e.uidToObjectId[i.uid]=t}if(null!=i.geometry){const e=i.geometry.spatialReference??a;i.geometry=(0,p.iV)((0,g.og)(i.geometry,e),e,a)}d.push(i),n.push((0,g.d1)(i.attributes[o]))}}l.addMany((0,c.Yn)([],d,s,r,i,o))}_applyUpdateEdits({updateResults:e},t){const{geometryType:n,hasM:s,hasZ:i,objectIdField:r,spatialReference:o,featureStore:a}=this._queryEngine;for(const l of t){const{attributes:t,geometry:d}=l,y=t&&t[r];if(null==y){e.push((0,g.av)(`Identifier field ${r} missing`));continue}if(!a.has(y)){e.push((0,g.av)(`Feature with object id ${y} missing`));continue}const f=(0,c.EI)(a.getFeature(y),n,i,s);if(null!=d){if(n!==(0,u.Ji)(d)){e.push((0,g.av)("Incorrect geometry type."));continue}const t=d.spatialReference??o;f.geometry=(0,p.iV)((0,g.og)(d,t),t,o)}if(t){const n=(0,g.O0)(this._fieldsIndex,f.attributes,t);if(n){e.push(n);continue}}a.add((0,c.XA)(f,n,i,s,r)),e.push((0,g.d1)(y))}}_createObjectIdGenerator(e,t){const n=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===n.type)return()=>n.name+"-"+Date.now().toString(16);let s=Number.NEGATIVE_INFINITY;for(const e of t)e.objectId&&(s=Math.max(s,e.objectId));return s=Math.max(0,s)+1,()=>s++}_assignObjectId(e,t,n=!1){const s=this._queryEngine.objectIdField;e[s]=n&&s in t?t[s]:this._objectIdGenerator()}async _checkProjection(e){try{await(0,p._W)(l.Zn,e)}catch{throw new r.Z("geojson-layer","Projection not supported")}}}},61957:(e,t,n)=>{n.d(t,{O3:()=>I,lG:()=>E,my:()=>F,q9:()=>u});var s=n(70375),i=n(59958),r=n(15540),o=n(14845);const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return a[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*c(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function d(e){for(const t of e)if(t.length>2)return!0;return!1}function p(e){let t=0;for(let n=0;n<e.length;n++){const s=e[n],i=e[(n+1)%e.length];t+=s[0]*i[1]-i[0]*s[1]}return t<=0}function y(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function f(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return m(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const s of t.coordinates)m(e,s,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const s of t.coordinates){h(e,s[0],n);for(let t=1;t<s.length;t++)g(e,s[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return b(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const s=t.coordinates;h(e,s[0],n);for(let t=1;t<s.length;t++)g(e,s[t],n);return e}(e,t,n)}}function h(e,t,n){const s=y(t);!function(e){return!p(e)}(s)?m(e,s,n):_(e,s,n)}function g(e,t,n){const s=y(t);!function(e){return p(e)}(s)?m(e,s,n):_(e,s,n)}function m(e,t,n){for(const s of t)b(e,s,n);e.lengths.push(t.length)}function _(e,t,n){for(let s=t.length-1;s>=0;s--)b(e,t[s],n);e.lengths.push(t.length)}function b(e,t,n){const[s,i,r]=t;e.coords.push(s,i),n.hasZ&&e.coords.push(r||0)}function w(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function I(e){if(!e)throw new s.Z("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new s.Z("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,i=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!i.test(n))throw new s.Z("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function F(e,t={}){const n=[],s=new Set,i=new Set;let r,a=!1,p=null,y=!1,{geometryType:f=null}=t,h=!1;for(const t of l(e)){const{geometry:e,properties:l,id:g}=t;if((!e||(f||(f=u(e.type)),u(e.type)===f))&&(a||(a=d(c(e))),y||(y=null!=g,y&&(r=typeof g,l&&(p=Object.keys(l).filter((e=>l[e]===g))))),l&&p&&y&&null!=g&&(p.length>1?p=p.filter((e=>l[e]===g)):1===p.length&&(p=l[p[0]]===g?p:[])),!h&&l)){let e=!0;for(const t in l){if(s.has(t))continue;const r=l[t];if(null==r){e=!1,i.add(t);continue}const a=w(r);if("unknown"===a){i.add(t);continue}i.delete(t),s.add(t);const u=(0,o.q6)(t);u&&n.push({name:u,alias:t,type:a})}h=e}}const g=(0,o.q6)(1===p?.length&&p[0]||null)??void 0;if(g)for(const e of n)if(e.name===g&&(0,o.H7)(e)){e.type="esriFieldTypeOID";break}return{fields:n,geometryType:f,hasZ:a,objectIdFieldName:g,objectIdFieldType:r,unknownFields:Array.from(i)}}function E(e,t){return Array.from(function*(e,t={}){const{geometryType:n,objectIdField:s}=t;for(const o of e){const{geometry:e,properties:a,id:l}=o;if(e&&u(e.type)!==n)continue;const c=a||{};let d;s&&(d=c[s],null==l||d||(c[s]=d=l));const p=new i.u_(e?f(new r.Z,e,t):null,c,null,d??void 0);yield p}}(l(e),t))}},40400:(e,t,n)=>{n.d(t,{Dm:()=>c,Hq:()=>d,MS:()=>p,bU:()=>a});var s=n(39994),i=n(67134),r=n(10287),o=n(86094);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?o.I4:"esriGeometryPolyline"===e?o.ET:o.lF}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let l=1;function c(e,t){if((0,s.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let n=`this.${t} = null;`;for(const t in e)n+=`this${u.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const s=new Function(`\n      return class AttributesClass$${l++} {\n        constructor() {\n          ${n};\n        }\n      }\n    `)();return()=>new s}catch(n){return()=>({[t]:null,...e})}}function d(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,i.d9)(e)}}]}function p(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:r.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}},24366:(e,t,n)=>{n.d(t,{O0:()=>d,av:()=>a,b:()=>h,d1:()=>l,og:()=>f});var s=n(35925),i=n(14845);class r{constructor(){this.code=null,this.description=null}}class o{constructor(e){this.error=new r,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function a(e){return new o(e)}class u{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function l(e){return new u(e)}const c=new Set;function d(e,t,n,s=!1,r){c.clear();for(const o in n){const u=e.get(o);if(!u)continue;const l=n[o],d=p(u,l);if(d!==l&&r&&r.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:u,originalValue:l,sanitizedValue:d}}),c.add(u.name),u&&(s||u.editable)){const e=(0,i.Qc)(u,d);if(e)return a((0,i.vP)(e,u,d));t[u.name]=d}}for(const t of e?.requiredFields??[])if(!c.has(t.name))return a(`missing required field "${t.name}"`);return null}function p(e,t){let n=t;return"string"==typeof t&&(0,i.H7)(e)?n=parseFloat(t):null!=t&&(0,i.qN)(e)&&"string"!=typeof t&&(n=String(t)),(0,i.Pz)(n)}let y;function f(e,t){if(!e||!(0,s.JY)(t))return e;if("rings"in e||"paths"in e){if(null==y)throw new TypeError("geometry engine not loaded");return y.simplify(t,e)}return e}async function h(e,t){!(0,s.JY)(e)||"esriGeometryPolygon"!==t&&"esriGeometryPolyline"!==t||await async function(){return null==y&&(y=await Promise.all([n.e(89067),n.e(8923)]).then(n.bind(n,8923))),y}()}}}]);